+ set -e
+ export PYTHONUNBUFFERED=True
+ PYTHONUNBUFFERED=True
+ GPU_ID=1
+ NET=ZF
+ NET_lc=zf
+ DATASET=cnn_data
+ array=($@)
+ len=3
+ EXTRA_ARGS=
+ EXTRA_ARGS_SLUG=
+ case $DATASET in
+ TRAIN_IMDB=CNNDATA_trainval
+ TEST_IMDB=CNNDATA_trainval
+ PT_DIR=pascal_voc
+ ITERS=1000
++ date +%Y-%m-%d_%H-%M-%S
+ LOG=experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52
+ exec
++ tee -a experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52
tee: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52: No such file or directory
+ echo Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52
Logging output to experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52
+ ../../tools/train_net.py --gpu 1 --solver ../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt --weights ../../data/imagenet_models/ZF.v2.caffemodel --imdb CNNDATA_trainval --iters 1000 --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad7b42320>
<function <lambda> at 0x2aaad7b42398>
<function <lambda> at 0x2aaad7b42410>
<function <lambda> at 0x2aaad7b42488>
Called with args:
Namespace(cfg_file='../../experiments/cfgs/roost.yml', gpu_id=1, imdb_name='CNNDATA_trainval', max_iters=1000, pretrained_model='../../data/imagenet_models/ZF.v2.caffemodel', randomize=False, set_cfgs=None, solver='../../models/pascal_voc/ZF/faster_rcnn_end2end/solver.prototxt')
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 100,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/train_net.py:101: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
Loaded dataset `voc_2007_trainval` for training
Set proposal method: gt
Appending horizontally-flipped training examples...
voc_2007_trainval gt roidb loaded from /home/sgabriel/py-faster-rcnn/data/cache/voc_2007_trainval_gt_roidb.pkl
done
Preparing training data...
done
1000 roidb entries
Output will be saved to `/home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval`
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 396, 212],
       [169, 173, 184, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 185, 399, 212],
       [165, 166, 189, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 179, 407, 218],
       [162, 163, 192, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': False, 'width': 600, 'boxes': array([[363, 175, 417, 229],
       [163, 162, 202, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 173, 182, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': False, 'width': 600, 'boxes': array([[169, 173, 184, 188],
       [378, 194, 396, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  361.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': False, 'width': 600, 'boxes': array([[165, 166, 189, 190],
       [372, 185, 399, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 163, 192, 193],
       [368, 179, 407, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 162, 202, 201],
       [363, 175, 417, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  3025.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': False, 'width': 600, 'boxes': array([[154, 149, 211, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': False, 'width': 600, 'boxes': array([[150, 145, 216, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': False, 'width': 600, 'boxes': array([[145, 140, 220, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': False, 'width': 600, 'boxes': array([[143, 116, 257, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203, 364, 284, 445],
       [152, 130, 242, 220],
       [364, 144, 430, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  8281.,  4489.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': False, 'width': 600, 'boxes': array([[381, 189, 396, 204],
       [226, 388, 241, 403],
       [168, 159, 195, 186],
       [373, 185, 391, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  784.,  361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 185, 413, 215],
       [220, 373, 262, 415],
       [166, 143, 220, 197],
       [372, 173, 408, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1849.,  3025.,  1369.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 173, 426, 221],
       [214, 362, 280, 428],
       [159, 137, 231, 209],
       [367, 158, 421, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  4489.,  5329.,  3025.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 194, 383, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 97, 141, 217, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': False, 'width': 600, 'boxes': array([[ 93, 136, 219, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 149, 287, 164],
       [155, 172, 182, 199],
       [362, 191, 386, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  784.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': False, 'width': 600, 'boxes': array([[267, 145, 291, 169],
       [149, 166, 188, 205],
       [348, 183, 390, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,  1849.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': False, 'width': 600, 'boxes': array([[259, 137, 298, 176],
       [141, 165, 192, 216],
       [344, 183, 389, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,  2704.,  2116.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': False, 'width': 600, 'boxes': array([[251, 131, 302, 182],
       [132, 156, 201, 225],
       [340, 182, 391, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2704.,  4900.,  2704.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': False, 'width': 600, 'boxes': array([[242, 126, 308, 192],
       [125, 151, 203, 229],
       [328, 173, 397, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  6241.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 118, 315, 205],
       [110, 146, 209, 245],
       [322, 173, 400, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  10000.,   6241.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': False, 'width': 600, 'boxes': array([[229, 398, 241, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 395, 246, 416],
       [379, 200, 400, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 388, 257, 421],
       [381, 196, 393, 208],
       [376, 195, 406, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   169.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 337, 269, 382],
       [224, 378, 299, 453],
       [277, 118, 358, 199],
       [367, 174, 436, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  5776.,  6724.,  4900.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': False, 'width': 600, 'boxes': array([[321, 282, 333, 294],
       [223, 388, 268, 433],
       [282, 140, 309, 167],
       [379, 187, 406, 214],
       [382, 192, 433, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,  2116.,   784.,   784.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 278, 350, 323],
       [225, 338, 252, 365],
       [224, 388, 278, 442],
       [280, 132, 331, 183],
       [373, 179, 427, 233],
       [367, 174, 466, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,    784.,   3025.,   2704.,   3025.,  10000.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': False, 'width': 600, 'boxes': array([[170, 170, 206, 206],
       [223, 397, 244, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 400, 236, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 397, 244, 418],
       [170, 170, 206, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217, 392, 253, 428],
       [168, 167, 222, 221],
       [377, 194, 395, 212],
       [375, 190, 393, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  3025.,   361.,   361.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 190, 418, 232],
       [373, 187, 394, 208],
       [283, 147, 295, 159],
       [163, 161, 241, 239],
       [215, 385, 260, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.,   484.,   169.,  6241.,  2116.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 345, 241, 363],
       [215, 388, 263, 436],
       [163, 158, 253, 248],
       [458, 115, 482, 139],
       [281, 141, 302, 162],
       [367, 173, 445, 251],
       [369, 181, 405, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,  2401.,  8281.,   625.,   484.,  6241.,  1369.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 339, 252, 369],
       [205, 379, 274, 448],
       [159, 150, 267, 258],
       [461, 108, 503, 150],
       [278, 132, 320, 174],
       [357, 154, 480, 277],
       [365, 171, 413, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   961.,   4900.,  11881.,   1849.,   1849.,  15376.,   2401.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 336, 260, 375],
       [149, 134, 284, 269],
       [456,  99, 516, 159],
       [276, 129, 336, 189],
       [351, 139, 504, 292],
       [355, 163, 424, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1600.,  18496.,   3721.,   3721.,  23716.,   4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': False, 'width': 600, 'boxes': array([[219, 335, 267, 383],
       [267, 118, 357, 208],
       [346, 127, 535, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,   8281.,  36100.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 196, 386, 208],
       [148, 172, 175, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224,  97, 326, 199],
       [209, 326, 251, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10609.,   1849.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': False, 'width': 600, 'boxes': array([[156, 180, 168, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': False, 'width': 600, 'boxes': array([[148, 172, 175, 199],
       [374, 196, 386, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 398, 229, 413],
       [155, 166, 185, 196],
       [364, 186, 394, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.,  961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 394, 237, 424],
       [152, 158, 191, 197],
       [271, 141, 289, 159],
       [362, 184, 389, 211],
       [347, 167, 422, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1600.,   361.,   784.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': False, 'width': 600, 'boxes': array([[198, 385, 246, 433],
       [212, 313, 233, 334],
       [314, 278, 329, 293],
       [137, 127, 230, 220],
       [266, 137, 296, 167],
       [350, 173, 401, 224],
       [327, 150, 450, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2401.,    484.,    256.,   8836.,    961.,   2704.,  15376.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 338, 239, 356],
       [186, 373, 258, 445],
       [308, 272, 335, 299],
       [123, 114, 249, 240],
       [255, 126, 303, 174],
       [333, 158, 426, 251],
       [333, 158, 426, 251],
       [300, 132, 468, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   361.,   5329.,    784.,  16129.,   2401.,   8836.,   8836.,
        28561.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': False, 'width': 600, 'boxes': array([[216, 333, 243, 360],
       [174, 364, 276, 466],
       [113, 102, 275, 264],
       [235, 109, 316, 190],
       [320, 145, 452, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([   784.,  10609.,  26569.,   6724.,  17689.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 326, 251, 368],
       [224,  97, 326, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1849.,  10609.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': False, 'width': 600, 'boxes': array([[334, 105, 514, 285],
       [147,  95, 279, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 32761.,  17689.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': False, 'width': 600, 'boxes': array([[325,  96, 523, 294],
       [151,  88, 310, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 39601.,  25600.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': False, 'width': 600, 'boxes': array([[147,  95, 279, 227],
       [334, 105, 514, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.,  32761.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  88, 310, 247],
       [325,  96, 523, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.,  39601.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': False, 'width': 600, 'boxes': array([[285, 109, 339, 163],
       [151,  99, 262, 210],
       [353, 128, 485, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,  12544.,  17689.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 158, 192, 182],
       [228, 392, 240, 404],
       [385, 185, 406, 206],
       [375, 179, 396, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  169.,  484.,  484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 277, 332, 289],
       [225, 383, 249, 407],
       [290, 143, 302, 155],
       [160, 138, 211, 189],
       [380, 164, 434, 218],
       [368, 163, 419, 214],
       [375, 179, 399, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   625.,   169.,  2704.,  3025.,  2704.,   625.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 262, 347, 298],
       [225, 368, 267, 410],
       [290, 129, 317, 156],
       [158, 121, 236, 199],
       [366, 141, 468, 243],
       [365, 145, 452, 232],
       [374, 161, 428, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1369.,   1849.,    784.,   6241.,  10609.,   7744.,   3025.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': False, 'width': 600, 'boxes': array([[376, 187, 388, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': False, 'width': 600, 'boxes': array([[373, 175, 400, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': False, 'width': 600, 'boxes': array([[374, 166, 416, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1849.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 154, 440, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 147, 458, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': False, 'width': 600, 'boxes': array([[369, 134, 480, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': False, 'width': 600, 'boxes': array([[365, 122, 497, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': False, 'width': 600, 'boxes': array([[345, 102, 516, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 29584.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 196, 390, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': False, 'width': 600, 'boxes': array([[371, 195, 407, 231],
       [377, 199, 392, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': False, 'width': 600, 'boxes': array([[377, 199, 392, 214],
       [371, 195, 407, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  256.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': False, 'width': 600, 'boxes': array([[283, 151, 292, 160],
       [377, 196, 398, 217],
       [345, 162, 438, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  100.,   484.,  8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 308, 175],
       [375, 191, 393, 209],
       [365, 190, 428, 253],
       [328, 149, 478, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,    361.,   4096.,  22801.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 148, 331, 202],
       [374, 193, 413, 232],
       [336, 176, 447, 287],
       [291, 123, 513, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3025.,   1600.,  12544.,  49729.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 157, 345, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': False, 'width': 600, 'boxes': array([[372, 194, 399, 221],
       [357, 196, 423, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  4489.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': False, 'width': 600, 'boxes': array([[379, 196, 385, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 49.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': False, 'width': 600, 'boxes': array([[368, 197, 404, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 196, 423, 262],
       [372, 194, 399, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,   784.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': False, 'width': 600, 'boxes': array([[253, 140, 343, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8281.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': False, 'width': 600, 'boxes': array([[249, 135, 348, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 10000.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': False, 'width': 600, 'boxes': array([[254, 338, 272, 356],
       [218, 323, 239, 344],
       [234, 187, 246, 199],
       [260, 206, 278, 224],
       [282, 148, 297, 163],
       [350, 192, 440, 282],
       [374, 192, 401, 219],
       [421, 172, 445, 196],
       [460, 131, 487, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  361.,   484.,   169.,   361.,   256.,  8281.,   784.,   625.,
         784.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': False, 'width': 600, 'boxes': array([[208,  56, 268, 116],
       [204, 325, 264, 385],
       [223, 188, 262, 227],
       [262, 144, 334, 216],
       [402, 168, 477, 243],
       [442, 122, 514, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3721.,  1600.,  5329.,  5776.,  5329.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': False, 'width': 600, 'boxes': array([[172,  84, 205, 117],
       [212,  59, 245,  92],
       [248, 340, 284, 376],
       [212, 320, 251, 359],
       [228, 184, 258, 214],
       [273, 144, 312, 183],
       [327, 183, 465, 321],
       [372, 196, 405, 229],
       [414, 171, 462, 219],
       [451, 125, 505, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  1156.,   1156.,   1369.,   1600.,    961.,   1600.,  19321.,
         1156.,   2401.,   3025.], dtype=float32), 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163,  78, 220, 135],
       [212,  61, 251, 100],
       [204, 319, 264, 379],
       [223, 188, 262, 227],
       [266, 143, 329, 206],
       [361, 187, 427, 253],
       [405, 168, 471, 234],
       [445, 126, 508, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  3721.,  1600.,  4096.,  4489.,  4489.,  4096.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': False, 'width': 600, 'boxes': array([[278, 149, 290, 161],
       [367, 197, 382, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': False, 'width': 600, 'boxes': array([[266, 140, 302, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': False, 'width': 600, 'boxes': array([[220, 115, 340, 235],
       [326, 173, 437, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 14641.,  12544.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 111, 346, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 103, 353, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': False, 'width': 600, 'boxes': array([[225, 186, 243, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': False, 'width': 600, 'boxes': array([[367, 197, 382, 212],
       [278, 149, 290, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  169.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': False, 'width': 600, 'boxes': array([[360, 193, 387, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 784.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': False, 'width': 600, 'boxes': array([[326, 173, 437, 284],
       [220, 115, 340, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,  14641.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': False, 'width': 600, 'boxes': array([[408, 167, 438, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': False, 'width': 600, 'boxes': array([[445, 124, 478, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': False, 'width': 600, 'boxes': array([[167,  83, 185, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': False, 'width': 600, 'boxes': array([[203,  58, 227,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': False, 'width': 600, 'boxes': array([[189,  49, 243, 103],
       [138,  69, 207, 138],
       [422, 113, 497, 188],
       [379, 154, 460, 235],
       [337, 180, 418, 261],
       [199, 174, 262, 237],
       [241, 125, 325, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4900.,  5776.,  6724.,  6724.,  4096.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  46, 246, 106],
       [420, 109, 504, 193],
       [330, 174, 429, 273],
       [229, 121, 331, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  3721.,   7225.,  10000.,  10609.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': False, 'width': 600, 'boxes': array([[214, 324, 229, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': False, 'width': 600, 'boxes': array([[245, 337, 266, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': False, 'width': 600, 'boxes': array([[239, 337, 272, 370],
       [204, 320, 240, 356],
       [200,  56, 233,  89],
       [158,  74, 194, 110],
       [437, 121, 485, 169],
       [399, 164, 444, 209],
       [357, 192, 396, 231],
       [212, 179, 251, 218],
       [256, 135, 310, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  1156.,  1369.,  2401.,  2116.,  1600.,  1600.,
        3025.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246, 129, 315, 198],
       [205, 177, 259, 231],
       [347, 185, 407, 245],
       [387, 159, 453, 225],
       [427, 115, 493, 181],
       [149,  74, 200, 125],
       [196,  55, 238,  97],
       [189, 316, 246, 373],
       [234, 337, 279, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4900.,  3025.,  3721.,  4489.,  4489.,  2704.,  1849.,  3364.,
        2116.], dtype=float32), 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': False, 'width': 600, 'boxes': array([[277, 141, 295, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': False, 'width': 600, 'boxes': array([[274, 132, 304, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': False, 'width': 600, 'boxes': array([[269, 121, 314, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': False, 'width': 600, 'boxes': array([[263, 112, 326, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4096.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': False, 'width': 600, 'boxes': array([[261, 104, 336, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': False, 'width': 600, 'boxes': array([[248, 120, 365, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 13924.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': False, 'width': 600, 'boxes': array([[209, 180, 263, 234],
       [257, 134, 335, 212],
       [439, 108, 535, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  6241.,  9409.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  59, 228,  77],
       [221, 326, 227, 332],
       [228, 187, 237, 196],
       [278, 147, 293, 162],
       [367, 205, 382, 220],
       [419, 174, 428, 183],
       [455, 132, 473, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,   49.,  100.,  256.,  256.,  100.,  361.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166,  79, 193, 106],
       [207,  54, 243,  90],
       [203, 320, 236, 353],
       [221, 184, 248, 211],
       [271, 145, 304, 178],
       [363, 196, 390, 223],
       [411, 172, 441, 202],
       [448, 126, 490, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  784.,  1369.,  1156.,   784.,  1156.,   784.,   961.,  1849.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  70, 214, 127],
       [205,  50, 259, 104],
       [217, 185, 256, 224],
       [259, 135, 322, 198],
       [402, 166, 459, 223],
       [442, 119, 511, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3025.,  1600.,  4096.,  3364.,  4900.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': False, 'width': 600, 'boxes': array([[453, 126, 465, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': False, 'width': 600, 'boxes': array([[439, 108, 472, 141],
       [264, 120, 297, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': False, 'width': 600, 'boxes': array([[420,  91, 477, 148],
       [255,  98, 315, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': False, 'width': 600, 'boxes': array([[403,  70, 478, 145],
       [246,  71, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  7744.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': False, 'width': 600, 'boxes': array([[264, 120, 297, 153],
       [439, 108, 472, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1156.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': False, 'width': 600, 'boxes': array([[255,  98, 315, 158],
       [420,  91, 477, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': False, 'width': 600, 'boxes': array([[246,  71, 333, 158],
       [403,  70, 478, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7744.,  5776.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': False, 'width': 600, 'boxes': array([[378, 194, 387, 203],
       [168, 192, 177, 201],
       [286, 152, 289, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.,   16.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': False, 'width': 600, 'boxes': array([[287, 146, 305, 164],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': False, 'width': 600, 'boxes': array([[294, 135, 342, 183],
       [186,  96, 207, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': False, 'width': 600, 'boxes': array([[186,  96, 207, 117],
       [294, 135, 342, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  2401.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181,  89, 220, 128],
       [170,  52, 194,  76],
       [287, 132, 356, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1600.,   625.,  4900.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': False, 'width': 600, 'boxes': array([[179,  87, 236, 144],
       [169,  50, 208,  89],
       [284, 130, 365, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  1600.,  6724.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': False, 'width': 600, 'boxes': array([[180,  93, 243, 156],
       [167,  48, 218,  99],
       [275, 127, 374, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4096.,   2704.,  10000.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 191, 403, 212],
       [166, 180, 190, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.,  625.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': False, 'width': 600, 'boxes': array([[163, 176, 217, 230],
       [290, 136, 326, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  1369.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': False, 'width': 600, 'boxes': array([[168, 192, 177, 201],
       [378, 194, 387, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,  100.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 180, 190, 204],
       [382, 191, 403, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 625.,  484.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': False, 'width': 600, 'boxes': array([[383, 191, 407, 215],
       [161, 177, 200, 216],
       [290, 140, 320, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  625.,  1600.,   961.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': False, 'width': 600, 'boxes': array([[222, 101, 354, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 17689.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': False, 'width': 600, 'boxes': array([[402,  93, 513, 204],
       [188, 183, 272, 267],
       [223, 100, 349, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.,   7225.,  16129.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': False, 'width': 600, 'boxes': array([[199, 337, 217, 355],
       [449, 124, 473, 148],
       [413, 169, 434, 190],
       [367, 191, 385, 209],
       [223, 185, 238, 200],
       [269, 140, 296, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 361.,  625.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  49, 242,  97],
       [186, 330, 234, 378],
       [434, 112, 488, 166],
       [402, 159, 450, 207],
       [356, 180, 398, 222],
       [212, 182, 251, 221],
       [255, 129, 312, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,  2401.,  3025.,  2401.,  1849.,  1600.,  3364.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': False, 'width': 600, 'boxes': array([[157,  36, 190,  69],
       [186,  41, 249, 104],
       [176, 331, 242, 397],
       [422, 108, 497, 183],
       [389, 149, 464, 224],
       [204, 181, 264, 241],
       [243, 119, 327, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  4096.,  4489.,  5776.,  5776.,  3721.,  7225.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': False, 'width': 600, 'boxes': array([[151,  30, 196,  75],
       [185,  41, 257, 113],
       [165, 326, 252, 413],
       [412,  98, 508, 194],
       [374, 150, 467, 243],
       [195, 181, 270, 256],
       [232, 109, 340, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  2116.,   5329.,   7744.,   9409.,   8836.,   5776.,  11881.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 144, 291, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': False, 'width': 600, 'boxes': array([[241, 108, 349, 216],
       [166, 315, 250, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11881.,   7225.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 334, 218, 346],
       [221, 175, 248, 202],
       [452, 120, 485, 153],
       [419, 167, 440, 188],
       [273, 133, 306, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  169.,   784.,  1156.,   484.,  1156.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 323, 228, 356],
       [215, 172, 251, 208],
       [446, 115, 500, 169],
       [407, 158, 455, 206],
       [264, 128, 315, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,  1369.,  3025.,  2401.,  2704.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': False, 'width': 600, 'boxes': array([[181, 317, 238, 374],
       [203, 164, 266, 227],
       [434, 116, 509, 191],
       [384, 163, 447, 226],
       [254, 121, 329, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  4096.,  5776.,  4096.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': False, 'width': 600, 'boxes': array([[166, 315, 250, 399],
       [241, 108, 349, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7225.,  11881.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': False, 'width': 600, 'boxes': array([[162, 353, 267, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': False, 'width': 600, 'boxes': array([[430, 137, 496, 203],
       [392, 191, 452, 251],
       [169, 348, 253, 432],
       [239, 153, 317, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  3721.,  7225.,  6241.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': False, 'width': 600, 'boxes': array([[329, 419, 341, 431],
       [456, 136, 474, 154],
       [419, 181, 431, 193],
       [204, 339, 213, 348],
       [275, 148, 293, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.,  361.,  169.,  100.,  361.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': False, 'width': 600, 'boxes': array([[317, 423, 350, 456],
       [162,  83, 189, 110],
       [446, 137, 482, 173],
       [410, 185, 437, 212],
       [190, 343, 226, 379],
       [218, 192, 242, 216],
       [261, 146, 300, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1156.,   784.,  1369.,   784.,  1369.,   625.,  1600.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': False, 'width': 600, 'boxes': array([[305, 425, 359, 479],
       [435, 136, 492, 193],
       [403, 189, 445, 231],
       [178, 345, 238, 405],
       [202, 195, 256, 249],
       [253, 154, 307, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  3364.,  1849.,  3721.,  3025.,  3025.], dtype=float32), 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': False, 'width': 600, 'boxes': array([[279, 142, 291, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 169.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': False, 'width': 600, 'boxes': array([[133,  40, 259, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207,  47, 222,  62],
       [162,  73, 177,  88],
       [194, 328, 215, 349],
       [441, 118, 471, 148],
       [405, 164, 426, 185],
       [363, 187, 381, 205],
       [221, 179, 236, 194],
       [266, 131, 293, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.,  484.,  961.,  484.,  361.,  256.,  784.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': False, 'width': 600, 'boxes': array([[210,  43, 231,  64],
       [155,  63, 191,  99],
       [179, 317, 224, 362],
       [429, 107, 480, 158],
       [391, 153, 436, 198],
       [351, 180, 384, 213],
       [210, 169, 243, 202],
       [249, 116, 300, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  2116.,  2704.,  2116.,  1156.,  1156.,  2704.], dtype=float32), 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': False, 'width': 600, 'boxes': array([[200,  34, 245,  79],
       [147,  56, 204, 113],
       [173, 311, 233, 371],
       [424, 100, 490, 166],
       [378, 147, 441, 210],
       [198, 160, 252, 214],
       [243, 106, 315, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.,  3721.,  4489.,  4096.,  3025.,  5329.], dtype=float32), 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  35, 267, 101],
       [148,  56, 223, 131],
       [419,  95, 494, 170],
       [366, 144, 441, 219],
       [228,  91, 330, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  4489.,   5776.,   5776.,   5776.,  10609.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194,  31, 281, 118],
       [134,  47, 242, 155],
       [353, 138, 446, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  7744.,  11881.,   8836.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': False, 'width': 600, 'boxes': array([[276, 120, 306, 150],
       [206, 322, 221, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 961.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': False, 'width': 600, 'boxes': array([[272, 100, 329, 157],
       [196, 297, 241, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  2116.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': False, 'width': 600, 'boxes': array([[206, 322, 221, 337],
       [276, 120, 306, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  961.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': False, 'width': 600, 'boxes': array([[196, 297, 241, 342],
       [272, 100, 329, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2116.,  3364.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': False, 'width': 600, 'boxes': array([[275, 142, 290, 157],
       [221, 186, 236, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': False, 'width': 600, 'boxes': array([[240, 128, 312, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': False, 'width': 600, 'boxes': array([[228, 125, 312, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 7225.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': False, 'width': 600, 'boxes': array([[218, 118, 323, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': False, 'width': 600, 'boxes': array([[221, 186, 236, 201],
       [275, 142, 290, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  256.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': False, 'width': 600, 'boxes': array([[202, 335, 217, 350],
       [215, 185, 239, 209],
       [269, 141, 293, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 256.,  625.,  625.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195, 332, 225, 362],
       [206, 184, 242, 220],
       [260, 134, 299, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  961.,  1369.,  1600.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': False, 'width': 600, 'boxes': array([[194, 332, 230, 368],
       [196, 178, 247, 229],
       [253, 130, 307, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2704.,  3025.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': False, 'width': 600, 'boxes': array([[182, 325, 236, 379],
       [186, 175, 252, 241],
       [249, 130, 309, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3025.,  4489.,  3721.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': False, 'width': 600, 'boxes': array([[223, 125, 304, 206],
       [153, 338, 213, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 6724.,  3721.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': False, 'width': 600, 'boxes': array([[215, 120, 308, 213],
       [141, 337, 213, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 8836.,  5329.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': False, 'width': 600, 'boxes': array([[207, 115, 312, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 11236.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': False, 'width': 600, 'boxes': array([[197, 109, 323, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': False, 'width': 600, 'boxes': array([[183,  95, 342, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': False, 'width': 600, 'boxes': array([[153, 338, 213, 398],
       [223, 125, 304, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3721.,  6724.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': False, 'width': 600, 'boxes': array([[141, 337, 213, 409],
       [215, 120, 308, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5329.,  8836.], dtype=float32), 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': False, 'width': 600, 'boxes': array([[407, 169, 428, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 484.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': False, 'width': 600, 'boxes': array([[393, 168, 429, 204],
       [201, 336, 213, 348],
       [220, 191, 229, 200],
       [268, 142, 289, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,   169.,   100.,   484.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': False, 'width': 600, 'boxes': array([[382, 166, 430, 214],
       [188, 333, 215, 360],
       [209, 192, 227, 210],
       [257, 139, 290, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 2401.,   784.,   361.,  1156.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': False, 'width': 600, 'boxes': array([[364, 161, 430, 227],
       [179, 336, 212, 369],
       [193, 189, 229, 225],
       [244, 134, 295, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 4489.,  1156.,  1369.,  2704.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': False, 'width': 600, 'boxes': array([[357, 160, 432, 235],
       [162, 332, 216, 386],
       [190, 194, 223, 227],
       [234, 130, 300, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 5776.,  3025.,  1156.,  4489.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': False, 'width': 600, 'boxes': array([[232, 105, 343, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 12544.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': False, 'width': 600, 'boxes': array([[224, 101, 350, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 16129.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': False, 'width': 600, 'boxes': array([[217,  95, 355, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 19321.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': False, 'width': 600, 'boxes': array([[212,  93, 359, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 21904.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': False, 'width': 600, 'boxes': array([[204,  90, 363, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 25600.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': False, 'width': 600, 'boxes': array([[201,  92, 363, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 26569.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': False, 'width': 600, 'boxes': array([[195,  86, 369, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'seg_areas': array([ 30625.], dtype=float32), 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': False, 'width': 600, 'boxes': array([[320, 299, 341, 320],
       [216, 183, 252, 219],
       [405, 162, 441, 198],
       [192, 328, 219, 355],
       [258, 125, 312, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  484.,  1369.,  1369.,   784.,  3025.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': False, 'width': 600, 'boxes': array([[311, 296, 347, 332],
       [209, 183, 257, 231],
       [395, 155, 449, 209],
       [183, 327, 222, 366],
       [249, 114, 324, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 1369.,  2401.,  3025.,  1600.,  5776.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': False, 'width': 600, 'boxes': array([[300, 288, 357, 345],
       [385, 144, 460, 219],
       [179, 325, 230, 376],
       [243, 113, 330, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 3364.,  5776.,  2704.,  7744.], dtype=float32), 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': False, 'width': 600, 'boxes': array([[227, 186, 236, 195],
       [421, 173, 427, 179],
       [274, 138, 292, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([ 100.,   49.,  361.], dtype=float32), 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': False, 'width': 600, 'boxes': array([[330, 305, 336, 311],
       [220, 184, 244, 208],
       [413, 170, 431, 188],
       [197, 330, 215, 348],
       [269, 133, 299, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'seg_areas': array([  49.,  625.,  361.,  361.,  961.], dtype=float32), 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/1.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 194, 221, 212],
       [415, 173, 430, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/2.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 185, 227, 212],
       [410, 166, 434, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/3.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 179, 231, 218],
       [407, 163, 437, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/4.jpg', 'flipped': True, 'width': 600, 'boxes': array([[182, 175, 236, 229],
       [397, 162, 436, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/5.jpg', 'flipped': True, 'width': 600, 'boxes': array([[417, 173, 429, 185]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/6.jpg', 'flipped': True, 'width': 600, 'boxes': array([[415, 173, 430, 188],
       [203, 194, 221, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/7.jpg', 'flipped': True, 'width': 600, 'boxes': array([[410, 166, 434, 190],
       [200, 185, 227, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/8.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 163, 437, 193],
       [192, 179, 231, 218]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/9.jpg', 'flipped': True, 'width': 600, 'boxes': array([[397, 162, 436, 201],
       [182, 175, 236, 229]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/10.jpg', 'flipped': True, 'width': 600, 'boxes': array([[388, 149, 445, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/11.jpg', 'flipped': True, 'width': 600, 'boxes': array([[383, 145, 449, 211]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/12.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379, 140, 454, 215]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/13.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/14.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/15.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/16.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/17.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/18.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/19.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/20.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/21.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 116, 456, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/22.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/23.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/24.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/25.jpg', 'flipped': True, 'width': 600, 'boxes': array([[315, 364, 396, 445],
       [357, 130, 447, 220],
       [169, 144, 235, 210]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/26.jpg', 'flipped': True, 'width': 600, 'boxes': array([[203, 189, 218, 204],
       [358, 388, 373, 403],
       [404, 159, 431, 186],
       [208, 185, 226, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/27.jpg', 'flipped': True, 'width': 600, 'boxes': array([[186, 185, 216, 215],
       [337, 373, 379, 415],
       [379, 143, 433, 197],
       [191, 173, 227, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/28.jpg', 'flipped': True, 'width': 600, 'boxes': array([[173, 173, 221, 221],
       [319, 362, 385, 428],
       [368, 137, 440, 209],
       [178, 158, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/29.jpg', 'flipped': True, 'width': 600, 'boxes': array([[216, 194, 228, 206]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/30.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/31.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/32.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/33.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/34.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/35.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/36.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/37.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/38.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/39.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/40.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/41.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/42.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 141, 502, 261]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/43.jpg', 'flipped': True, 'width': 600, 'boxes': array([[380, 136, 506, 262]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/44.jpg', 'flipped': True, 'width': 600, 'boxes': array([[312, 149, 327, 164],
       [417, 172, 444, 199],
       [213, 191, 237, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/45.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 145, 332, 169],
       [411, 166, 450, 205],
       [209, 183, 251, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/46.jpg', 'flipped': True, 'width': 600, 'boxes': array([[301, 137, 340, 176],
       [407, 165, 458, 216],
       [210, 183, 255, 228]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/47.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 131, 348, 182],
       [398, 156, 467, 225],
       [208, 182, 259, 233]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/48.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 126, 357, 192],
       [396, 151, 474, 229],
       [202, 173, 271, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/49.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 118, 371, 205],
       [390, 146, 489, 245],
       [199, 173, 277, 251]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/50.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/51.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/52.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/53.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/54.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/55.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/56.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/57.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/58.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/59.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/60.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/61.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 398, 370, 410]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/62.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 395, 374, 416],
       [199, 200, 220, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/63.jpg', 'flipped': True, 'width': 600, 'boxes': array([[342, 388, 375, 421],
       [206, 196, 218, 208],
       [193, 195, 223, 225]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/64.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/65.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/66.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/67.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/68.jpg', 'flipped': True, 'width': 600, 'boxes': array([[330, 337, 375, 382],
       [300, 378, 375, 453],
       [241, 118, 322, 199],
       [163, 174, 232, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/69.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266, 282, 278, 294],
       [331, 388, 376, 433],
       [290, 140, 317, 167],
       [193, 187, 220, 214],
       [166, 192, 217, 243]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/70.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 278, 294, 323],
       [347, 338, 374, 365],
       [321, 388, 375, 442],
       [268, 132, 319, 183],
       [172, 179, 226, 233],
       [133, 174, 232, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/71.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/72.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/73.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/74.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/75.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/76.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/77.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/78.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/79.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/80.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/81.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/82.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/83.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/84.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/85.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/86.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/87.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/88.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/89.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/90.jpg', 'flipped': True, 'width': 600, 'boxes': array([[393, 170, 429, 206],
       [355, 397, 376, 418]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/91.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/92.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/93.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/94.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/95.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/96.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 400, 375, 412]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/97.jpg', 'flipped': True, 'width': 600, 'boxes': array([[355, 397, 376, 418],
       [393, 170, 429, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/98.jpg', 'flipped': True, 'width': 600, 'boxes': array([[346, 392, 382, 428],
       [377, 167, 431, 221],
       [204, 194, 222, 212],
       [206, 190, 224, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/99.jpg', 'flipped': True, 'width': 600, 'boxes': array([[181, 190, 223, 232],
       [205, 187, 226, 208],
       [304, 147, 316, 159],
       [358, 161, 436, 239],
       [339, 385, 384, 430]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/100.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/101.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/103.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 345, 376, 363],
       [336, 388, 384, 436],
       [346, 158, 436, 248],
       [117, 115, 141, 139],
       [297, 141, 318, 162],
       [154, 173, 232, 251],
       [194, 181, 230, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/104.jpg', 'flipped': True, 'width': 600, 'boxes': array([[347, 339, 377, 369],
       [325, 379, 394, 448],
       [332, 150, 440, 258],
       [ 96, 108, 138, 150],
       [279, 132, 321, 174],
       [119, 154, 242, 277],
       [186, 171, 234, 219]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/105.jpg', 'flipped': True, 'width': 600, 'boxes': array([[339, 336, 378, 375],
       [315, 134, 450, 269],
       [ 83,  99, 143, 159],
       [263, 129, 323, 189],
       [ 95, 139, 248, 292],
       [175, 163, 244, 232]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/106.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 335, 380, 383],
       [242, 118, 332, 208],
       [ 64, 127, 253, 316]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/107.jpg', 'flipped': True, 'width': 600, 'boxes': array([[213, 196, 225, 208],
       [424, 172, 451, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/108.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/109.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/110.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/111.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/112.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/113.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/114.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/115.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/116.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/117.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/118.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/119.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/120.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273,  97, 375, 199],
       [348, 326, 390, 368]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/121.jpg', 'flipped': True, 'width': 600, 'boxes': array([[431, 180, 443, 192]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/122.jpg', 'flipped': True, 'width': 600, 'boxes': array([[424, 172, 451, 199],
       [213, 196, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/123.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/124.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/125.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/126.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/127.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/128.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/129.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/130.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/131.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 398, 385, 413],
       [414, 166, 444, 196],
       [205, 186, 235, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/132.jpg', 'flipped': True, 'width': 600, 'boxes': array([[362, 394, 392, 424],
       [408, 158, 447, 197],
       [310, 141, 328, 159],
       [210, 184, 237, 211],
       [177, 167, 252, 242]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/133.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353, 385, 401, 433],
       [366, 313, 387, 334],
       [270, 278, 285, 293],
       [369, 127, 462, 220],
       [303, 137, 333, 167],
       [198, 173, 249, 224],
       [149, 150, 272, 273]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/134.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/135.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/136.jpg', 'flipped': True, 'width': 600, 'boxes': array([[360, 338, 378, 356],
       [341, 373, 413, 445],
       [264, 272, 291, 299],
       [350, 114, 476, 240],
       [296, 126, 344, 174],
       [173, 158, 266, 251],
       [173, 158, 266, 251],
       [131, 132, 299, 300]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/137.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 333, 383, 360],
       [323, 364, 425, 466],
       [324, 102, 486, 264],
       [283, 109, 364, 190],
       [147, 145, 279, 277]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/138.jpg', 'flipped': True, 'width': 600, 'boxes': array([[348, 326, 390, 368],
       [273,  97, 375, 199]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/139.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/140.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/141.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/142.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/143.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/144.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/145.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/146.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/147.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/148.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 85, 105, 265, 285],
       [320,  95, 452, 227]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/149.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 76,  96, 274, 294],
       [289,  88, 448, 247]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/150.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/151.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/152.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/153.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/154.jpg', 'flipped': True, 'width': 600, 'boxes': array([[320,  95, 452, 227],
       [ 85, 105, 265, 285]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/155.jpg', 'flipped': True, 'width': 600, 'boxes': array([[289,  88, 448, 247],
       [ 76,  96, 274, 294]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/156.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/157.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/158.jpg', 'flipped': True, 'width': 600, 'boxes': array([[260, 109, 314, 163],
       [337,  99, 448, 210],
       [114, 128, 246, 260]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/159.jpg', 'flipped': True, 'width': 600, 'boxes': array([[407, 158, 431, 182],
       [359, 392, 371, 404],
       [193, 185, 214, 206],
       [203, 179, 224, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/160.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/161.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/162.jpg', 'flipped': True, 'width': 600, 'boxes': array([[267, 277, 279, 289],
       [350, 383, 374, 407],
       [297, 143, 309, 155],
       [388, 138, 439, 189],
       [165, 164, 219, 218],
       [180, 163, 231, 214],
       [200, 179, 224, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/163.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 262, 288, 298],
       [332, 368, 374, 410],
       [282, 129, 309, 156],
       [363, 121, 441, 199],
       [131, 141, 233, 243],
       [147, 145, 234, 232],
       [171, 161, 225, 215]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/164.jpg', 'flipped': True, 'width': 600, 'boxes': array([[211, 187, 223, 199]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/165.jpg', 'flipped': True, 'width': 600, 'boxes': array([[199, 175, 226, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/166.jpg', 'flipped': True, 'width': 600, 'boxes': array([[183, 166, 225, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/167.jpg', 'flipped': True, 'width': 600, 'boxes': array([[159, 154, 228, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/168.jpg', 'flipped': True, 'width': 600, 'boxes': array([[141, 147, 228, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/169.jpg', 'flipped': True, 'width': 600, 'boxes': array([[119, 134, 230, 245]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/170.jpg', 'flipped': True, 'width': 600, 'boxes': array([[102, 122, 234, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/171.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 83, 102, 254, 273]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/172.jpg', 'flipped': True, 'width': 600, 'boxes': array([[209, 196, 221, 208]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/173.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 195, 228, 231],
       [207, 199, 222, 214]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/174.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/175.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/176.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/177.jpg', 'flipped': True, 'width': 600, 'boxes': array([[207, 199, 222, 214],
       [192, 195, 228, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/178.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/179.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/180.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/181.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/182.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/183.jpg', 'flipped': True, 'width': 600, 'boxes': array([[307, 151, 316, 160],
       [201, 196, 222, 217],
       [161, 162, 254, 255]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/184.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 142, 324, 175],
       [206, 191, 224, 209],
       [171, 190, 234, 253],
       [121, 149, 271, 299]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/185.jpg', 'flipped': True, 'width': 600, 'boxes': array([[268, 148, 322, 202],
       [186, 193, 225, 232],
       [152, 176, 263, 287],
       [ 86, 123, 308, 345]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/186.jpg', 'flipped': True, 'width': 600, 'boxes': array([[254, 157, 320, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/187.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/188.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/189.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/190.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/191.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/192.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/193.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/194.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/195.jpg', 'flipped': True, 'width': 600, 'boxes': array([[200, 194, 227, 221],
       [176, 196, 242, 262]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/196.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/197.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/198.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/199.jpg', 'flipped': True, 'width': 600, 'boxes': array([[214, 196, 220, 202]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/200.jpg', 'flipped': True, 'width': 600, 'boxes': array([[195, 197, 231, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/201.jpg', 'flipped': True, 'width': 600, 'boxes': array([[176, 196, 242, 262],
       [200, 194, 227, 221]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/202.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/203.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/204.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/205.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/206.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/207.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/208.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 140, 346, 230]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/209.jpg', 'flipped': True, 'width': 600, 'boxes': array([[251, 135, 350, 234]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/210.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/211.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/212.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/213.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/214.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/215.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/216.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/217.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/218.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/219.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 338, 345, 356],
       [360, 323, 381, 344],
       [353, 187, 365, 199],
       [321, 206, 339, 224],
       [302, 148, 317, 163],
       [159, 192, 249, 282],
       [198, 192, 225, 219],
       [154, 172, 178, 196],
       [112, 131, 139, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/220.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/221.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/222.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/223.jpg', 'flipped': True, 'width': 600, 'boxes': array([[331,  56, 391, 116],
       [335, 325, 395, 385],
       [337, 188, 376, 227],
       [265, 144, 337, 216],
       [122, 168, 197, 243],
       [ 85, 122, 157, 194]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/224.jpg', 'flipped': True, 'width': 600, 'boxes': array([[394,  84, 427, 117],
       [354,  59, 387,  92],
       [315, 340, 351, 376],
       [348, 320, 387, 359],
       [341, 184, 371, 214],
       [287, 144, 326, 183],
       [134, 183, 272, 321],
       [194, 196, 227, 229],
       [137, 171, 185, 219],
       [ 94, 125, 148, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <10x2 sparse matrix of type '<type 'numpy.float32'>'
	with 10 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/225.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  78, 436, 135],
       [348,  61, 387, 100],
       [335, 319, 395, 379],
       [337, 188, 376, 227],
       [270, 143, 333, 206],
       [172, 187, 238, 253],
       [128, 168, 194, 234],
       [ 91, 126, 154, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/226.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 149, 321, 161],
       [217, 197, 232, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/227.jpg', 'flipped': True, 'width': 600, 'boxes': array([[297, 140, 333, 176]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/228.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/229.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/230.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/231.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/232.jpg', 'flipped': True, 'width': 600, 'boxes': array([[259, 115, 379, 235],
       [162, 173, 273, 284]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/233.jpg', 'flipped': True, 'width': 600, 'boxes': array([[253, 111, 385, 243]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/234.jpg', 'flipped': True, 'width': 600, 'boxes': array([[246, 103, 393, 250]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/235.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356, 186, 374, 204]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/236.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/237.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/238.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/239.jpg', 'flipped': True, 'width': 600, 'boxes': array([[217, 197, 232, 212],
       [309, 149, 321, 161]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/240.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 193, 239, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/241.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/242.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/243.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/244.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/245.jpg', 'flipped': True, 'width': 600, 'boxes': array([[162, 173, 273, 284],
       [259, 115, 379, 235]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/246.jpg', 'flipped': True, 'width': 600, 'boxes': array([[161, 167, 191, 197]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/247.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/248.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/249.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/250.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121, 124, 154, 157]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/251.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/252.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/253.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/254.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/255.jpg', 'flipped': True, 'width': 600, 'boxes': array([[414,  83, 432, 101]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/256.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/257.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/258.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/259.jpg', 'flipped': True, 'width': 600, 'boxes': array([[372,  58, 396,  82]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/260.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/261.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/262.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  49, 410, 103],
       [392,  69, 461, 138],
       [102, 113, 177, 188],
       [139, 154, 220, 235],
       [181, 180, 262, 261],
       [337, 174, 400, 237],
       [274, 125, 358, 209]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/263.jpg', 'flipped': True, 'width': 600, 'boxes': array([[353,  46, 413, 106],
       [ 95, 109, 179, 193],
       [170, 174, 269, 273],
       [268, 121, 370, 223]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/264.jpg', 'flipped': True, 'width': 600, 'boxes': array([[370, 324, 385, 339]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/265.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/266.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/267.jpg', 'flipped': True, 'width': 600, 'boxes': array([[333, 337, 354, 358]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/268.jpg', 'flipped': True, 'width': 600, 'boxes': array([[327, 337, 360, 370],
       [359, 320, 395, 356],
       [366,  56, 399,  89],
       [405,  74, 441, 110],
       [114, 121, 162, 169],
       [155, 164, 200, 209],
       [203, 192, 242, 231],
       [348, 179, 387, 218],
       [289, 135, 343, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/269.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284, 129, 353, 198],
       [340, 177, 394, 231],
       [192, 185, 252, 245],
       [146, 159, 212, 225],
       [106, 115, 172, 181],
       [399,  74, 450, 125],
       [361,  55, 403,  97],
       [353, 316, 410, 373],
       [320, 337, 365, 382]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <9x2 sparse matrix of type '<type 'numpy.float32'>'
	with 9 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/270.jpg', 'flipped': True, 'width': 600, 'boxes': array([[304, 141, 322, 159]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/271.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 132, 325, 162]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/272.jpg', 'flipped': True, 'width': 600, 'boxes': array([[285, 121, 330, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/273.jpg', 'flipped': True, 'width': 600, 'boxes': array([[273, 112, 336, 175]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/274.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 104, 338, 179]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/275.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/276.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/277.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/278.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/279.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/280.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/281.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/282.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/283.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/284.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/285.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/286.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/287.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/288.jpg', 'flipped': True, 'width': 600, 'boxes': array([[234, 120, 351, 237]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/289.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/290.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/291.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/292.jpg', 'flipped': True, 'width': 600, 'boxes': array([[336, 180, 390, 234],
       [264, 134, 342, 212],
       [ 64, 108, 160, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/293.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/294.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/295.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371,  59, 389,  77],
       [372, 326, 378, 332],
       [362, 187, 371, 196],
       [306, 147, 321, 162],
       [217, 205, 232, 220],
       [171, 174, 180, 183],
       [126, 132, 144, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/296.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/297.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/298.jpg', 'flipped': True, 'width': 600, 'boxes': array([[406,  79, 433, 106],
       [356,  54, 392,  90],
       [363, 320, 396, 353],
       [351, 184, 378, 211],
       [295, 145, 328, 178],
       [209, 196, 236, 223],
       [158, 172, 188, 202],
       [109, 126, 151, 168]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/299.jpg', 'flipped': True, 'width': 600, 'boxes': array([[385,  70, 442, 127],
       [340,  50, 394, 104],
       [343, 185, 382, 224],
       [277, 135, 340, 198],
       [140, 166, 197, 223],
       [ 88, 119, 157, 188]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/300.jpg', 'flipped': True, 'width': 600, 'boxes': array([[134, 126, 146, 138]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/301.jpg', 'flipped': True, 'width': 600, 'boxes': array([[127, 108, 160, 141],
       [302, 120, 335, 153]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/302.jpg', 'flipped': True, 'width': 600, 'boxes': array([[122,  91, 179, 148],
       [284,  98, 344, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/303.jpg', 'flipped': True, 'width': 600, 'boxes': array([[121,  70, 196, 145],
       [266,  71, 353, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/304.jpg', 'flipped': True, 'width': 600, 'boxes': array([[302, 120, 335, 153],
       [127, 108, 160, 141]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/305.jpg', 'flipped': True, 'width': 600, 'boxes': array([[284,  98, 344, 158],
       [122,  91, 179, 148]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/306.jpg', 'flipped': True, 'width': 600, 'boxes': array([[266,  71, 353, 158],
       [121,  70, 196, 145]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/307.jpg', 'flipped': True, 'width': 600, 'boxes': array([[212, 194, 221, 203],
       [422, 192, 431, 201],
       [310, 152, 313, 155]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/308.jpg', 'flipped': True, 'width': 600, 'boxes': array([[294, 146, 312, 164],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/309.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/310.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/311.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257, 135, 305, 183],
       [392,  96, 413, 117]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/312.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/313.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/314.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/315.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/316.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/317.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/318.jpg', 'flipped': True, 'width': 600, 'boxes': array([[392,  96, 413, 117],
       [257, 135, 305, 183]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/319.jpg', 'flipped': True, 'width': 600, 'boxes': array([[379,  89, 418, 128],
       [405,  52, 429,  76],
       [243, 132, 312, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/320.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363,  87, 420, 144],
       [391,  50, 430,  89],
       [234, 130, 315, 211]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/321.jpg', 'flipped': True, 'width': 600, 'boxes': array([[356,  93, 419, 156],
       [381,  48, 432,  99],
       [225, 127, 324, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/322.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/323.jpg', 'flipped': True, 'width': 600, 'boxes': array([[196, 191, 217, 212],
       [409, 180, 433, 204]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/324.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/325.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 176, 436, 230],
       [273, 136, 309, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/326.jpg', 'flipped': True, 'width': 600, 'boxes': array([[422, 192, 431, 201],
       [212, 194, 221, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/327.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409, 180, 433, 204],
       [196, 191, 217, 212]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/328.jpg', 'flipped': True, 'width': 600, 'boxes': array([[192, 191, 216, 215],
       [399, 177, 438, 216],
       [279, 140, 309, 170]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/329.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/330.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/331.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/332.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/333.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/334.jpg', 'flipped': True, 'width': 600, 'boxes': array([[245, 101, 377, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/335.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/336.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/337.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/338.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/339.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/340.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/341.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/342.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/343.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/344.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/345.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/346.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/347.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/348.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/349.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/350.jpg', 'flipped': True, 'width': 600, 'boxes': array([[ 86,  93, 197, 204],
       [327, 183, 411, 267],
       [250, 100, 376, 226]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/351.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 337, 400, 355],
       [126, 124, 150, 148],
       [165, 169, 186, 190],
       [214, 191, 232, 209],
       [361, 185, 376, 200],
       [303, 140, 330, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/352.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/353.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/354.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/355.jpg', 'flipped': True, 'width': 600, 'boxes': array([[357,  49, 405,  97],
       [365, 330, 413, 378],
       [111, 112, 165, 166],
       [149, 159, 197, 207],
       [201, 180, 243, 222],
       [348, 182, 387, 221],
       [287, 129, 344, 186]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/356.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/357.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/358.jpg', 'flipped': True, 'width': 600, 'boxes': array([[409,  36, 442,  69],
       [350,  41, 413, 104],
       [357, 331, 423, 397],
       [102, 108, 177, 183],
       [135, 149, 210, 224],
       [335, 181, 395, 241],
       [272, 119, 356, 203]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/359.jpg', 'flipped': True, 'width': 600, 'boxes': array([[403,  30, 448,  75],
       [342,  41, 414, 113],
       [347, 326, 434, 413],
       [ 91,  98, 187, 194],
       [132, 150, 225, 243],
       [329, 181, 404, 256],
       [259, 109, 367, 217]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/360.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 144, 320, 156]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/361.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/362.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/363.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/364.jpg', 'flipped': True, 'width': 600, 'boxes': array([[250, 108, 358, 216],
       [349, 315, 433, 399]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/365.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/366.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/367.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/368.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/369.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/370.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/371.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/372.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/373.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/374.jpg', 'flipped': True, 'width': 600, 'boxes': array([[381, 334, 393, 346],
       [351, 175, 378, 202],
       [114, 120, 147, 153],
       [159, 167, 180, 188],
       [293, 133, 326, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/375.jpg', 'flipped': True, 'width': 600, 'boxes': array([[371, 323, 404, 356],
       [348, 172, 384, 208],
       [ 99, 115, 153, 169],
       [144, 158, 192, 206],
       [284, 128, 335, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/376.jpg', 'flipped': True, 'width': 600, 'boxes': array([[361, 317, 418, 374],
       [333, 164, 396, 227],
       [ 90, 116, 165, 191],
       [152, 163, 215, 226],
       [270, 121, 345, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/377.jpg', 'flipped': True, 'width': 600, 'boxes': array([[349, 315, 433, 399],
       [250, 108, 358, 216]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/378.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/379.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/380.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/381.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/382.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/383.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/384.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/385.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/386.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/387.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/388.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332, 353, 437, 458]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/389.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/390.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/391.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/392.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/393.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/394.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/395.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/396.jpg', 'flipped': True, 'width': 600, 'boxes': array([[103, 137, 169, 203],
       [147, 191, 207, 251],
       [346, 348, 430, 432],
       [282, 153, 360, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/397.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/398.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 419, 270, 431],
       [125, 136, 143, 154],
       [168, 181, 180, 193],
       [386, 339, 395, 348],
       [306, 148, 324, 166]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/399.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 423, 282, 456],
       [410,  83, 437, 110],
       [117, 137, 153, 173],
       [162, 185, 189, 212],
       [373, 343, 409, 379],
       [357, 192, 381, 216],
       [299, 146, 338, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/400.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240, 425, 294, 479],
       [107, 136, 164, 193],
       [154, 189, 196, 231],
       [361, 345, 421, 405],
       [343, 195, 397, 249],
       [292, 154, 346, 208]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <6x2 sparse matrix of type '<type 'numpy.float32'>'
	with 6 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/401.jpg', 'flipped': True, 'width': 600, 'boxes': array([[308, 142, 320, 154]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/402.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/403.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/404.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/405.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/406.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/407.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/408.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/409.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/410.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/411.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/412.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/413.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/414.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/415.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/416.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/417.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/418.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/419.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/420.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/421.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/422.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/423.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/424.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/425.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/426.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/427.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/428.jpg', 'flipped': True, 'width': 600, 'boxes': array([[340,  40, 466, 166]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/429.jpg', 'flipped': True, 'width': 600, 'boxes': array([[377,  47, 392,  62],
       [422,  73, 437,  88],
       [384, 328, 405, 349],
       [128, 118, 158, 148],
       [173, 164, 194, 185],
       [218, 187, 236, 205],
       [363, 179, 378, 194],
       [306, 131, 333, 158]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/430.jpg', 'flipped': True, 'width': 600, 'boxes': array([[368,  43, 389,  64],
       [408,  63, 444,  99],
       [375, 317, 420, 362],
       [119, 107, 170, 158],
       [163, 153, 208, 198],
       [215, 180, 248, 213],
       [356, 169, 389, 202],
       [299, 116, 350, 167]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <8x2 sparse matrix of type '<type 'numpy.float32'>'
	with 8 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/431.jpg', 'flipped': True, 'width': 600, 'boxes': array([[354,  34, 399,  79],
       [395,  56, 452, 113],
       [366, 311, 426, 371],
       [109, 100, 175, 166],
       [158, 147, 221, 210],
       [347, 160, 401, 214],
       [284, 106, 356, 178]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <7x2 sparse matrix of type '<type 'numpy.float32'>'
	with 7 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/432.jpg', 'flipped': True, 'width': 600, 'boxes': array([[332,  35, 398, 101],
       [376,  56, 451, 131],
       [105,  95, 180, 170],
       [158, 144, 233, 219],
       [269,  91, 371, 193]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/433.jpg', 'flipped': True, 'width': 600, 'boxes': array([[318,  31, 405, 118],
       [357,  47, 465, 155],
       [153, 138, 246, 231]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/434.jpg', 'flipped': True, 'width': 600, 'boxes': array([[293, 120, 323, 150],
       [378, 322, 393, 337]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/435.jpg', 'flipped': True, 'width': 600, 'boxes': array([[270, 100, 327, 157],
       [358, 297, 403, 342]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/436.jpg', 'flipped': True, 'width': 600, 'boxes': array([[378, 322, 393, 337],
       [293, 120, 323, 150]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/437.jpg', 'flipped': True, 'width': 600, 'boxes': array([[358, 297, 403, 342],
       [270, 100, 327, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/438.jpg', 'flipped': True, 'width': 600, 'boxes': array([[309, 142, 324, 157],
       [363, 186, 378, 201]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/439.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/440.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/441.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/442.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/443.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 128, 359, 200]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/444.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 125, 371, 209]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/445.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 118, 381, 223]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/446.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 378, 201],
       [309, 142, 324, 157]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/447.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/448.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/449.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/450.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/451.jpg', 'flipped': True, 'width': 600, 'boxes': array([[382, 335, 397, 350],
       [360, 185, 384, 209],
       [306, 141, 330, 165]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/452.jpg', 'flipped': True, 'width': 600, 'boxes': array([[374, 332, 404, 362],
       [357, 184, 393, 220],
       [300, 134, 339, 173]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/453.jpg', 'flipped': True, 'width': 600, 'boxes': array([[369, 332, 405, 368],
       [352, 178, 403, 229],
       [292, 130, 346, 184]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/454.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 325, 417, 379],
       [347, 175, 413, 241],
       [290, 130, 350, 190]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/455.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/456.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/457.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/458.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/459.jpg', 'flipped': True, 'width': 600, 'boxes': array([[295, 125, 376, 206],
       [386, 338, 446, 398]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/460.jpg', 'flipped': True, 'width': 600, 'boxes': array([[291, 120, 384, 213],
       [386, 337, 458, 409]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/461.jpg', 'flipped': True, 'width': 600, 'boxes': array([[287, 115, 392, 220]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/462.jpg', 'flipped': True, 'width': 600, 'boxes': array([[276, 109, 402, 235]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/463.jpg', 'flipped': True, 'width': 600, 'boxes': array([[257,  95, 416, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/464.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/465.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/466.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/467.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/468.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/469.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/470.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/471.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/472.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 338, 446, 398],
       [295, 125, 376, 206]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1], dtype=int32), 'max_classes': array([1, 1]), 'image': '../../data/CNNData/JPEGImages/473.jpg', 'flipped': True, 'width': 600, 'boxes': array([[386, 337, 458, 409],
       [291, 120, 384, 213]], dtype=uint16), 'max_overlaps': array([ 1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <2x2 sparse matrix of type '<type 'numpy.float32'>'
	with 2 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/474.jpg', 'flipped': True, 'width': 600, 'boxes': array([[171, 169, 192, 190]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/475.jpg', 'flipped': True, 'width': 600, 'boxes': array([[170, 168, 206, 204],
       [386, 336, 398, 348],
       [370, 191, 379, 200],
       [310, 142, 331, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/476.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 166, 217, 214],
       [384, 333, 411, 360],
       [372, 192, 390, 210],
       [309, 139, 342, 172]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/477.jpg', 'flipped': True, 'width': 600, 'boxes': array([[169, 161, 235, 227],
       [387, 336, 420, 369],
       [370, 189, 406, 225],
       [304, 134, 355, 185]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/478.jpg', 'flipped': True, 'width': 600, 'boxes': array([[167, 160, 242, 235],
       [383, 332, 437, 386],
       [376, 194, 409, 227],
       [299, 130, 365, 196]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/479.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/480.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/481.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/482.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/483.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/484.jpg', 'flipped': True, 'width': 600, 'boxes': array([[256, 105, 367, 216]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/485.jpg', 'flipped': True, 'width': 600, 'boxes': array([[249, 101, 375, 227]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/486.jpg', 'flipped': True, 'width': 600, 'boxes': array([[244,  95, 382, 233]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/487.jpg', 'flipped': True, 'width': 600, 'boxes': array([[240,  93, 387, 240]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/488.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  90, 395, 249]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/489.jpg', 'flipped': True, 'width': 600, 'boxes': array([[236,  92, 398, 254]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1], dtype=int32), 'max_classes': array([1]), 'image': '../../data/CNNData/JPEGImages/490.jpg', 'flipped': True, 'width': 600, 'boxes': array([[230,  86, 404, 260]], dtype=uint16), 'max_overlaps': array([ 1.], dtype=float32), 'height': 600, 'gt_overlaps': <1x2 sparse matrix of type '<type 'numpy.float32'>'
	with 1 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/491.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/492.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/493.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/494.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/495.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/496.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/497.jpg', 'flipped': True, 'width': 600, 'boxes': array([[258, 299, 279, 320],
       [347, 183, 383, 219],
       [158, 162, 194, 198],
       [380, 328, 407, 355],
       [287, 125, 341, 179]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/498.jpg', 'flipped': True, 'width': 600, 'boxes': array([[252, 296, 288, 332],
       [342, 183, 390, 231],
       [150, 155, 204, 209],
       [377, 327, 416, 366],
       [275, 114, 350, 189]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/499.jpg', 'flipped': True, 'width': 600, 'boxes': array([[242, 288, 299, 345],
       [139, 144, 214, 219],
       [369, 325, 420, 376],
       [269, 113, 356, 200]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <4x2 sparse matrix of type '<type 'numpy.float32'>'
	with 4 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/500.jpg', 'flipped': True, 'width': 600, 'boxes': array([[363, 186, 372, 195],
       [172, 173, 178, 179],
       [307, 138, 325, 156]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <3x2 sparse matrix of type '<type 'numpy.float32'>'
	with 3 stored elements in Compressed Sparse Row format>}
train.py
{'gt_classes': array([1, 1, 1, 1, 1], dtype=int32), 'max_classes': array([1, 1, 1, 1, 1]), 'image': '../../data/CNNData/JPEGImages/501.jpg', 'flipped': True, 'width': 600, 'boxes': array([[263, 305, 269, 311],
       [355, 184, 379, 208],
       [168, 170, 186, 188],
       [384, 330, 402, 348],
       [300, 133, 330, 163]], dtype=uint16), 'max_overlaps': array([ 1.,  1.,  1.,  1.,  1.], dtype=float32), 'height': 600, 'gt_overlaps': <5x2 sparse matrix of type '<type 'numpy.float32'>'
	with 5 stored elements in Compressed Sparse Row format>}
Filtered 0 roidb entries: 1000 -> 1000
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0323 21:06:05.923595  2864 solver.cpp:48] Initializing solver from parameters: 
train_net: "/home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt"
base_lr: 0.001
display: 20
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 50000
snapshot: 0
snapshot_prefix: "zf_faster_rcnn"
average_loss: 100
iter_size: 2
I0323 21:06:05.923643  2864 solver.cpp:81] Creating training net from train_net file: /home/sgabriel/py-faster-rcnn/models/pascal_voc/ZF/faster_rcnn_end2end/train.prototxt
I0323 21:06:05.925652  2864 net.cpp:49] Initializing net from parameters: 
name: "ZF"
state {
  phase: TRAIN
}
layer {
  name: "input-data"
  type: "Python"
  top: "data"
  top: "im_info"
  top: "gt_boxes"
  python_param {
    module: "roi_data_layer.layer"
    layer: "RoIDataLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn-data"
  type: "Python"
  bottom: "rpn_cls_score"
  bottom: "gt_boxes"
  bottom: "im_info"
  bottom: "data"
  top: "rpn_labels"
  top: "rpn_bbox_targets"
  top: "rpn_bbox_inside_weights"
  top: "rpn_bbox_outside_weights"
  python_param {
    module: "rpn.anchor_target_layer"
    layer: "AnchorTargetLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "rpn_loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "rpn_cls_score_reshape"
  bottom: "rpn_labels"
  top: "rpn_cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "rpn_loss_bbox"
  type: "SmoothL1Loss"
  bottom: "rpn_bbox_pred"
  bottom: "rpn_bbox_targets"
  bottom: "rpn_bbox_inside_weights"
  bottom: "rpn_bbox_outside_weights"
  top: "rpn_loss_bbox"
  loss_weight: 1
  smooth_l1_loss_param {
    sigma: 3
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rpn_rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi-data"
  type: "Python"
  bottom: "rpn_rois"
  bottom: "gt_boxes"
  top: "rois"
  top: "labels"
  top: "bbox_targets"
  top: "bbox_inside_weights"
  top: "bbox_outside_weights"
  python_param {
    module: "rpn.proposal_target_layer"
    layer: "ProposalTargetLayer"
    param_str: "\'num_classes\': 2"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  param {
    lr_mult: 0.01
  }
  param {
    lr_mult: 0.01
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 8
    weight_filler {
      type: "gaussian"
      std: 0.001
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss_cls"
  type: "SoftmaxWithLoss"
  bottom: "cls_score"
  bottom: "labels"
  top: "cls_loss"
  loss_weight: 1
  propagate_down: true
  propagate_down: false
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
layer {
  name: "loss_bbox"
  type: "SmoothL1Loss"
  bottom: "bbox_pred"
  bottom: "bbox_targets"
  bottom: "bbox_inside_weights"
  bottom: "bbox_outside_weights"
  top: "bbox_loss"
  loss_weight: 1
}
I0323 21:06:05.925925  2864 layer_factory.hpp:77] Creating layer input-data
I0323 21:06:06.284642  2864 net.cpp:106] Creating Layer input-data
I0323 21:06:06.284694  2864 net.cpp:411] input-data -> data
I0323 21:06:06.284734  2864 net.cpp:411] input-data -> im_info
I0323 21:06:06.284749  2864 net.cpp:411] input-data -> gt_boxes
RoiDataLayer: name_to_top: {'gt_boxes': 2, 'data': 0, 'im_info': 1}
I0323 21:06:06.342847  2864 net.cpp:150] Setting up input-data
I0323 21:06:06.342880  2864 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0323 21:06:06.342890  2864 net.cpp:157] Top shape: 1 3 (3)
I0323 21:06:06.342900  2864 net.cpp:157] Top shape: 1 4 (4)
I0323 21:06:06.342906  2864 net.cpp:165] Memory required for data: 4320028
I0323 21:06:06.342921  2864 layer_factory.hpp:77] Creating layer data_input-data_0_split
I0323 21:06:06.344177  2864 net.cpp:106] Creating Layer data_input-data_0_split
I0323 21:06:06.344190  2864 net.cpp:454] data_input-data_0_split <- data
I0323 21:06:06.344203  2864 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_0
I0323 21:06:06.344223  2864 net.cpp:411] data_input-data_0_split -> data_input-data_0_split_1
I0323 21:06:06.344288  2864 net.cpp:150] Setting up data_input-data_0_split
I0323 21:06:06.344301  2864 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0323 21:06:06.344313  2864 net.cpp:157] Top shape: 1 3 600 600 (1080000)
I0323 21:06:06.344319  2864 net.cpp:165] Memory required for data: 12960028
I0323 21:06:06.344327  2864 layer_factory.hpp:77] Creating layer im_info_input-data_1_split
I0323 21:06:06.344341  2864 net.cpp:106] Creating Layer im_info_input-data_1_split
I0323 21:06:06.344347  2864 net.cpp:454] im_info_input-data_1_split <- im_info
I0323 21:06:06.344360  2864 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_0
I0323 21:06:06.344372  2864 net.cpp:411] im_info_input-data_1_split -> im_info_input-data_1_split_1
I0323 21:06:06.344415  2864 net.cpp:150] Setting up im_info_input-data_1_split
I0323 21:06:06.344429  2864 net.cpp:157] Top shape: 1 3 (3)
I0323 21:06:06.344439  2864 net.cpp:157] Top shape: 1 3 (3)
I0323 21:06:06.344444  2864 net.cpp:165] Memory required for data: 12960052
I0323 21:06:06.344452  2864 layer_factory.hpp:77] Creating layer gt_boxes_input-data_2_split
I0323 21:06:06.344462  2864 net.cpp:106] Creating Layer gt_boxes_input-data_2_split
I0323 21:06:06.344470  2864 net.cpp:454] gt_boxes_input-data_2_split <- gt_boxes
I0323 21:06:06.344480  2864 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_0
I0323 21:06:06.344491  2864 net.cpp:411] gt_boxes_input-data_2_split -> gt_boxes_input-data_2_split_1
I0323 21:06:06.344538  2864 net.cpp:150] Setting up gt_boxes_input-data_2_split
I0323 21:06:06.344547  2864 net.cpp:157] Top shape: 1 4 (4)
I0323 21:06:06.344558  2864 net.cpp:157] Top shape: 1 4 (4)
I0323 21:06:06.344564  2864 net.cpp:165] Memory required for data: 12960084
I0323 21:06:06.344573  2864 layer_factory.hpp:77] Creating layer conv1
I0323 21:06:06.344596  2864 net.cpp:106] Creating Layer conv1
I0323 21:06:06.344604  2864 net.cpp:454] conv1 <- data_input-data_0_split_0
I0323 21:06:06.344617  2864 net.cpp:411] conv1 -> conv1
I0323 21:06:06.346525  2864 net.cpp:150] Setting up conv1
I0323 21:06:06.346545  2864 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0323 21:06:06.346554  2864 net.cpp:165] Memory required for data: 47520084
I0323 21:06:06.346585  2864 layer_factory.hpp:77] Creating layer relu1
I0323 21:06:06.346606  2864 net.cpp:106] Creating Layer relu1
I0323 21:06:06.346612  2864 net.cpp:454] relu1 <- conv1
I0323 21:06:06.346626  2864 net.cpp:397] relu1 -> conv1 (in-place)
I0323 21:06:06.346642  2864 net.cpp:150] Setting up relu1
I0323 21:06:06.346652  2864 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0323 21:06:06.346658  2864 net.cpp:165] Memory required for data: 82080084
I0323 21:06:06.346665  2864 layer_factory.hpp:77] Creating layer norm1
I0323 21:06:06.346678  2864 net.cpp:106] Creating Layer norm1
I0323 21:06:06.346684  2864 net.cpp:454] norm1 <- conv1
I0323 21:06:06.346695  2864 net.cpp:411] norm1 -> norm1
I0323 21:06:06.346843  2864 net.cpp:150] Setting up norm1
I0323 21:06:06.346856  2864 net.cpp:157] Top shape: 1 96 300 300 (8640000)
I0323 21:06:06.346863  2864 net.cpp:165] Memory required for data: 116640084
I0323 21:06:06.346870  2864 layer_factory.hpp:77] Creating layer pool1
I0323 21:06:06.346885  2864 net.cpp:106] Creating Layer pool1
I0323 21:06:06.346892  2864 net.cpp:454] pool1 <- norm1
I0323 21:06:06.346902  2864 net.cpp:411] pool1 -> pool1
I0323 21:06:06.346962  2864 net.cpp:150] Setting up pool1
I0323 21:06:06.346974  2864 net.cpp:157] Top shape: 1 96 151 151 (2188896)
I0323 21:06:06.346982  2864 net.cpp:165] Memory required for data: 125395668
I0323 21:06:06.346989  2864 layer_factory.hpp:77] Creating layer conv2
I0323 21:06:06.347005  2864 net.cpp:106] Creating Layer conv2
I0323 21:06:06.347012  2864 net.cpp:454] conv2 <- pool1
I0323 21:06:06.347039  2864 net.cpp:411] conv2 -> conv2
I0323 21:06:06.349287  2864 net.cpp:150] Setting up conv2
I0323 21:06:06.349304  2864 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0323 21:06:06.349313  2864 net.cpp:165] Memory required for data: 131310292
I0323 21:06:06.349331  2864 layer_factory.hpp:77] Creating layer relu2
I0323 21:06:06.349344  2864 net.cpp:106] Creating Layer relu2
I0323 21:06:06.349351  2864 net.cpp:454] relu2 <- conv2
I0323 21:06:06.349366  2864 net.cpp:397] relu2 -> conv2 (in-place)
I0323 21:06:06.349378  2864 net.cpp:150] Setting up relu2
I0323 21:06:06.349386  2864 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0323 21:06:06.349392  2864 net.cpp:165] Memory required for data: 137224916
I0323 21:06:06.349400  2864 layer_factory.hpp:77] Creating layer norm2
I0323 21:06:06.349411  2864 net.cpp:106] Creating Layer norm2
I0323 21:06:06.349416  2864 net.cpp:454] norm2 <- conv2
I0323 21:06:06.349429  2864 net.cpp:411] norm2 -> norm2
I0323 21:06:06.349552  2864 net.cpp:150] Setting up norm2
I0323 21:06:06.349563  2864 net.cpp:157] Top shape: 1 256 76 76 (1478656)
I0323 21:06:06.349571  2864 net.cpp:165] Memory required for data: 143139540
I0323 21:06:06.349578  2864 layer_factory.hpp:77] Creating layer pool2
I0323 21:06:06.349592  2864 net.cpp:106] Creating Layer pool2
I0323 21:06:06.349598  2864 net.cpp:454] pool2 <- norm2
I0323 21:06:06.349608  2864 net.cpp:411] pool2 -> pool2
I0323 21:06:06.349653  2864 net.cpp:150] Setting up pool2
I0323 21:06:06.349663  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.349670  2864 net.cpp:165] Memory required for data: 144697044
I0323 21:06:06.349678  2864 layer_factory.hpp:77] Creating layer conv3
I0323 21:06:06.349694  2864 net.cpp:106] Creating Layer conv3
I0323 21:06:06.349700  2864 net.cpp:454] conv3 <- pool2
I0323 21:06:06.349712  2864 net.cpp:411] conv3 -> conv3
I0323 21:06:06.354137  2864 net.cpp:150] Setting up conv3
I0323 21:06:06.354157  2864 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0323 21:06:06.354166  2864 net.cpp:165] Memory required for data: 147033300
I0323 21:06:06.354185  2864 layer_factory.hpp:77] Creating layer relu3
I0323 21:06:06.354199  2864 net.cpp:106] Creating Layer relu3
I0323 21:06:06.354207  2864 net.cpp:454] relu3 <- conv3
I0323 21:06:06.354218  2864 net.cpp:397] relu3 -> conv3 (in-place)
I0323 21:06:06.354229  2864 net.cpp:150] Setting up relu3
I0323 21:06:06.354238  2864 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0323 21:06:06.354243  2864 net.cpp:165] Memory required for data: 149369556
I0323 21:06:06.354250  2864 layer_factory.hpp:77] Creating layer conv4
I0323 21:06:06.354266  2864 net.cpp:106] Creating Layer conv4
I0323 21:06:06.354272  2864 net.cpp:454] conv4 <- conv3
I0323 21:06:06.354284  2864 net.cpp:411] conv4 -> conv4
I0323 21:06:06.359375  2864 net.cpp:150] Setting up conv4
I0323 21:06:06.359395  2864 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0323 21:06:06.359401  2864 net.cpp:165] Memory required for data: 151705812
I0323 21:06:06.359414  2864 layer_factory.hpp:77] Creating layer relu4
I0323 21:06:06.359426  2864 net.cpp:106] Creating Layer relu4
I0323 21:06:06.359431  2864 net.cpp:454] relu4 <- conv4
I0323 21:06:06.359444  2864 net.cpp:397] relu4 -> conv4 (in-place)
I0323 21:06:06.359455  2864 net.cpp:150] Setting up relu4
I0323 21:06:06.359463  2864 net.cpp:157] Top shape: 1 384 39 39 (584064)
I0323 21:06:06.359469  2864 net.cpp:165] Memory required for data: 154042068
I0323 21:06:06.359477  2864 layer_factory.hpp:77] Creating layer conv5
I0323 21:06:06.359498  2864 net.cpp:106] Creating Layer conv5
I0323 21:06:06.359504  2864 net.cpp:454] conv5 <- conv4
I0323 21:06:06.359514  2864 net.cpp:411] conv5 -> conv5
I0323 21:06:06.362489  2864 net.cpp:150] Setting up conv5
I0323 21:06:06.362506  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.362514  2864 net.cpp:165] Memory required for data: 155599572
I0323 21:06:06.362534  2864 layer_factory.hpp:77] Creating layer relu5
I0323 21:06:06.362545  2864 net.cpp:106] Creating Layer relu5
I0323 21:06:06.362553  2864 net.cpp:454] relu5 <- conv5
I0323 21:06:06.362563  2864 net.cpp:397] relu5 -> conv5 (in-place)
I0323 21:06:06.362574  2864 net.cpp:150] Setting up relu5
I0323 21:06:06.362582  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.362588  2864 net.cpp:165] Memory required for data: 157157076
I0323 21:06:06.362596  2864 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0323 21:06:06.362606  2864 net.cpp:106] Creating Layer conv5_relu5_0_split
I0323 21:06:06.362612  2864 net.cpp:454] conv5_relu5_0_split <- conv5
I0323 21:06:06.362627  2864 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0323 21:06:06.362637  2864 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0323 21:06:06.362682  2864 net.cpp:150] Setting up conv5_relu5_0_split
I0323 21:06:06.362691  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.362700  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.362706  2864 net.cpp:165] Memory required for data: 160272084
I0323 21:06:06.362715  2864 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0323 21:06:06.362733  2864 net.cpp:106] Creating Layer rpn_conv/3x3
I0323 21:06:06.362740  2864 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0323 21:06:06.362751  2864 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0323 21:06:06.376238  2864 net.cpp:150] Setting up rpn_conv/3x3
I0323 21:06:06.376257  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.376266  2864 net.cpp:165] Memory required for data: 161829588
I0323 21:06:06.376277  2864 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0323 21:06:06.376287  2864 net.cpp:106] Creating Layer rpn_relu/3x3
I0323 21:06:06.376293  2864 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0323 21:06:06.376303  2864 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0323 21:06:06.376313  2864 net.cpp:150] Setting up rpn_relu/3x3
I0323 21:06:06.376322  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.376327  2864 net.cpp:165] Memory required for data: 163387092
I0323 21:06:06.376332  2864 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0323 21:06:06.376343  2864 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0323 21:06:06.376348  2864 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0323 21:06:06.376359  2864 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0323 21:06:06.376369  2864 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0323 21:06:06.376410  2864 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0323 21:06:06.376420  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.376428  2864 net.cpp:157] Top shape: 1 256 39 39 (389376)
I0323 21:06:06.376433  2864 net.cpp:165] Memory required for data: 166502100
I0323 21:06:06.376440  2864 layer_factory.hpp:77] Creating layer rpn_cls_score
I0323 21:06:06.376461  2864 net.cpp:106] Creating Layer rpn_cls_score
I0323 21:06:06.376466  2864 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0323 21:06:06.376477  2864 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0323 21:06:06.376860  2864 net.cpp:150] Setting up rpn_cls_score
I0323 21:06:06.376874  2864 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0323 21:06:06.376881  2864 net.cpp:165] Memory required for data: 166611612
I0323 21:06:06.376893  2864 layer_factory.hpp:77] Creating layer rpn_cls_score_rpn_cls_score_0_split
I0323 21:06:06.376902  2864 net.cpp:106] Creating Layer rpn_cls_score_rpn_cls_score_0_split
I0323 21:06:06.376909  2864 net.cpp:454] rpn_cls_score_rpn_cls_score_0_split <- rpn_cls_score
I0323 21:06:06.376919  2864 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_0
I0323 21:06:06.376929  2864 net.cpp:411] rpn_cls_score_rpn_cls_score_0_split -> rpn_cls_score_rpn_cls_score_0_split_1
I0323 21:06:06.376976  2864 net.cpp:150] Setting up rpn_cls_score_rpn_cls_score_0_split
I0323 21:06:06.376986  2864 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0323 21:06:06.376996  2864 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0323 21:06:06.377002  2864 net.cpp:165] Memory required for data: 166830636
I0323 21:06:06.377008  2864 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0323 21:06:06.377024  2864 net.cpp:106] Creating Layer rpn_bbox_pred
I0323 21:06:06.377032  2864 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0323 21:06:06.377044  2864 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0323 21:06:06.377496  2864 net.cpp:150] Setting up rpn_bbox_pred
I0323 21:06:06.377508  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.377516  2864 net.cpp:165] Memory required for data: 167049660
I0323 21:06:06.377526  2864 layer_factory.hpp:77] Creating layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0323 21:06:06.377538  2864 net.cpp:106] Creating Layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0323 21:06:06.377544  2864 net.cpp:454] rpn_bbox_pred_rpn_bbox_pred_0_split <- rpn_bbox_pred
I0323 21:06:06.377554  2864 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0323 21:06:06.377564  2864 net.cpp:411] rpn_bbox_pred_rpn_bbox_pred_0_split -> rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0323 21:06:06.377606  2864 net.cpp:150] Setting up rpn_bbox_pred_rpn_bbox_pred_0_split
I0323 21:06:06.377615  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.377624  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.377629  2864 net.cpp:165] Memory required for data: 167487708
I0323 21:06:06.377635  2864 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0323 21:06:06.377650  2864 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0323 21:06:06.377656  2864 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score_rpn_cls_score_0_split_0
I0323 21:06:06.377668  2864 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0323 21:06:06.377703  2864 net.cpp:150] Setting up rpn_cls_score_reshape
I0323 21:06:06.377712  2864 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0323 21:06:06.377718  2864 net.cpp:165] Memory required for data: 167597220
I0323 21:06:06.377727  2864 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0323 21:06:06.377738  2864 net.cpp:106] Creating Layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0323 21:06:06.377743  2864 net.cpp:454] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split <- rpn_cls_score_reshape
I0323 21:06:06.377753  2864 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0323 21:06:06.377764  2864 net.cpp:411] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split -> rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0323 21:06:06.377810  2864 net.cpp:150] Setting up rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0323 21:06:06.377818  2864 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0323 21:06:06.377826  2864 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0323 21:06:06.377832  2864 net.cpp:165] Memory required for data: 167816244
I0323 21:06:06.377838  2864 layer_factory.hpp:77] Creating layer rpn-data
I0323 21:06:06.410390  2864 net.cpp:106] Creating Layer rpn-data
I0323 21:06:06.410413  2864 net.cpp:454] rpn-data <- rpn_cls_score_rpn_cls_score_0_split_1
I0323 21:06:06.410425  2864 net.cpp:454] rpn-data <- gt_boxes_input-data_2_split_0
I0323 21:06:06.410432  2864 net.cpp:454] rpn-data <- im_info_input-data_1_split_0
I0323 21:06:06.410439  2864 net.cpp:454] rpn-data <- data_input-data_0_split_1
I0323 21:06:06.410451  2864 net.cpp:411] rpn-data -> rpn_labels
I0323 21:06:06.410471  2864 net.cpp:411] rpn-data -> rpn_bbox_targets
I0323 21:06:06.410485  2864 net.cpp:411] rpn-data -> rpn_bbox_inside_weights
I0323 21:06:06.410496  2864 net.cpp:411] rpn-data -> rpn_bbox_outside_weights
I0323 21:06:06.412786  2864 net.cpp:150] Setting up rpn-data
I0323 21:06:06.412811  2864 net.cpp:157] Top shape: 1 1 351 39 (13689)
I0323 21:06:06.412818  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.412824  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.412830  2864 net.cpp:157] Top shape: 1 36 39 39 (54756)
I0323 21:06:06.412834  2864 net.cpp:165] Memory required for data: 168528072
I0323 21:06:06.412842  2864 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0323 21:06:06.412860  2864 net.cpp:106] Creating Layer rpn_loss_cls
I0323 21:06:06.412868  2864 net.cpp:454] rpn_loss_cls <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_0
I0323 21:06:06.412879  2864 net.cpp:454] rpn_loss_cls <- rpn_labels
I0323 21:06:06.412889  2864 net.cpp:411] rpn_loss_cls -> rpn_cls_loss
I0323 21:06:06.412919  2864 layer_factory.hpp:77] Creating layer rpn_loss_cls
I0323 21:06:06.413125  2864 net.cpp:150] Setting up rpn_loss_cls
I0323 21:06:06.413137  2864 net.cpp:157] Top shape: (1)
I0323 21:06:06.413143  2864 net.cpp:160]     with loss weight 1
I0323 21:06:06.413169  2864 net.cpp:165] Memory required for data: 168528076
I0323 21:06:06.413177  2864 layer_factory.hpp:77] Creating layer rpn_loss_bbox
I0323 21:06:06.413192  2864 net.cpp:106] Creating Layer rpn_loss_bbox
I0323 21:06:06.413199  2864 net.cpp:454] rpn_loss_bbox <- rpn_bbox_pred_rpn_bbox_pred_0_split_0
I0323 21:06:06.413209  2864 net.cpp:454] rpn_loss_bbox <- rpn_bbox_targets
I0323 21:06:06.413218  2864 net.cpp:454] rpn_loss_bbox <- rpn_bbox_inside_weights
I0323 21:06:06.413225  2864 net.cpp:454] rpn_loss_bbox <- rpn_bbox_outside_weights
I0323 21:06:06.413234  2864 net.cpp:411] rpn_loss_bbox -> rpn_loss_bbox
I0323 21:06:06.413919  2864 net.cpp:150] Setting up rpn_loss_bbox
I0323 21:06:06.413933  2864 net.cpp:157] Top shape: (1)
I0323 21:06:06.413938  2864 net.cpp:160]     with loss weight 1
I0323 21:06:06.413947  2864 net.cpp:165] Memory required for data: 168528080
I0323 21:06:06.413959  2864 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0323 21:06:06.413967  2864 net.cpp:106] Creating Layer rpn_cls_prob
I0323 21:06:06.413975  2864 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape_rpn_cls_score_reshape_0_split_1
I0323 21:06:06.413986  2864 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0323 21:06:06.414074  2864 net.cpp:150] Setting up rpn_cls_prob
I0323 21:06:06.414083  2864 net.cpp:157] Top shape: 1 2 351 39 (27378)
I0323 21:06:06.414089  2864 net.cpp:165] Memory required for data: 168637592
I0323 21:06:06.414096  2864 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0323 21:06:06.414113  2864 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0323 21:06:06.414120  2864 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0323 21:06:06.414129  2864 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0323 21:06:06.414167  2864 net.cpp:150] Setting up rpn_cls_prob_reshape
I0323 21:06:06.414176  2864 net.cpp:157] Top shape: 1 18 39 39 (27378)
I0323 21:06:06.414182  2864 net.cpp:165] Memory required for data: 168747104
I0323 21:06:06.414187  2864 layer_factory.hpp:77] Creating layer proposal
I0323 21:06:06.459064  2864 net.cpp:106] Creating Layer proposal
I0323 21:06:06.459084  2864 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0323 21:06:06.459095  2864 net.cpp:454] proposal <- rpn_bbox_pred_rpn_bbox_pred_0_split_1
I0323 21:06:06.459103  2864 net.cpp:454] proposal <- im_info_input-data_1_split_1
I0323 21:06:06.459113  2864 net.cpp:411] proposal -> rpn_rois
I0323 21:06:06.484532  2864 net.cpp:150] Setting up proposal
I0323 21:06:06.484556  2864 net.cpp:157] Top shape: 1 5 (5)
I0323 21:06:06.484563  2864 net.cpp:165] Memory required for data: 168747124
I0323 21:06:06.484570  2864 layer_factory.hpp:77] Creating layer roi-data
I0323 21:06:06.495618  2864 net.cpp:106] Creating Layer roi-data
I0323 21:06:06.495640  2864 net.cpp:454] roi-data <- rpn_rois
I0323 21:06:06.495651  2864 net.cpp:454] roi-data <- gt_boxes_input-data_2_split_1
I0323 21:06:06.495662  2864 net.cpp:411] roi-data -> rois
I0323 21:06:06.495676  2864 net.cpp:411] roi-data -> labels
I0323 21:06:06.495688  2864 net.cpp:411] roi-data -> bbox_targets
I0323 21:06:06.495700  2864 net.cpp:411] roi-data -> bbox_inside_weights
I0323 21:06:06.495710  2864 net.cpp:411] roi-data -> bbox_outside_weights
I0323 21:06:06.496534  2864 net.cpp:150] Setting up roi-data
I0323 21:06:06.496556  2864 net.cpp:157] Top shape: 1 5 (5)
I0323 21:06:06.496565  2864 net.cpp:157] Top shape: 1 1 (1)
I0323 21:06:06.496572  2864 net.cpp:157] Top shape: 1 8 (8)
I0323 21:06:06.496579  2864 net.cpp:157] Top shape: 1 8 (8)
I0323 21:06:06.496587  2864 net.cpp:157] Top shape: 1 8 (8)
I0323 21:06:06.496592  2864 net.cpp:165] Memory required for data: 168747244
I0323 21:06:06.496598  2864 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0323 21:06:06.496618  2864 net.cpp:106] Creating Layer roi_pool_conv5
I0323 21:06:06.496626  2864 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0323 21:06:06.496636  2864 net.cpp:454] roi_pool_conv5 <- rois
I0323 21:06:06.496645  2864 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0323 21:06:06.496664  2864 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0323 21:06:06.496726  2864 net.cpp:150] Setting up roi_pool_conv5
I0323 21:06:06.496736  2864 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0323 21:06:06.496742  2864 net.cpp:165] Memory required for data: 168784108
I0323 21:06:06.496747  2864 layer_factory.hpp:77] Creating layer fc6
I0323 21:06:06.496760  2864 net.cpp:106] Creating Layer fc6
I0323 21:06:06.496767  2864 net.cpp:454] fc6 <- roi_pool_conv5
I0323 21:06:06.496778  2864 net.cpp:411] fc6 -> fc6
I0323 21:06:06.625795  2864 net.cpp:150] Setting up fc6
I0323 21:06:06.625839  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.625847  2864 net.cpp:165] Memory required for data: 168800492
I0323 21:06:06.625870  2864 layer_factory.hpp:77] Creating layer relu6
I0323 21:06:06.625885  2864 net.cpp:106] Creating Layer relu6
I0323 21:06:06.625892  2864 net.cpp:454] relu6 <- fc6
I0323 21:06:06.625903  2864 net.cpp:397] relu6 -> fc6 (in-place)
I0323 21:06:06.625917  2864 net.cpp:150] Setting up relu6
I0323 21:06:06.625924  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.625928  2864 net.cpp:165] Memory required for data: 168816876
I0323 21:06:06.625933  2864 layer_factory.hpp:77] Creating layer drop6
I0323 21:06:06.625958  2864 net.cpp:106] Creating Layer drop6
I0323 21:06:06.625965  2864 net.cpp:454] drop6 <- fc6
I0323 21:06:06.625972  2864 net.cpp:397] drop6 -> fc6 (in-place)
I0323 21:06:06.626006  2864 net.cpp:150] Setting up drop6
I0323 21:06:06.626013  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.626019  2864 net.cpp:165] Memory required for data: 168833260
I0323 21:06:06.626024  2864 layer_factory.hpp:77] Creating layer fc7
I0323 21:06:06.626035  2864 net.cpp:106] Creating Layer fc7
I0323 21:06:06.626040  2864 net.cpp:454] fc7 <- fc6
I0323 21:06:06.626049  2864 net.cpp:411] fc7 -> fc7
I0323 21:06:06.682217  2864 net.cpp:150] Setting up fc7
I0323 21:06:06.682252  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.682257  2864 net.cpp:165] Memory required for data: 168849644
I0323 21:06:06.682270  2864 layer_factory.hpp:77] Creating layer relu7
I0323 21:06:06.682286  2864 net.cpp:106] Creating Layer relu7
I0323 21:06:06.682292  2864 net.cpp:454] relu7 <- fc7
I0323 21:06:06.682302  2864 net.cpp:397] relu7 -> fc7 (in-place)
I0323 21:06:06.682315  2864 net.cpp:150] Setting up relu7
I0323 21:06:06.682320  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.682324  2864 net.cpp:165] Memory required for data: 168866028
I0323 21:06:06.682328  2864 layer_factory.hpp:77] Creating layer drop7
I0323 21:06:06.682339  2864 net.cpp:106] Creating Layer drop7
I0323 21:06:06.682343  2864 net.cpp:454] drop7 <- fc7
I0323 21:06:06.682348  2864 net.cpp:397] drop7 -> fc7 (in-place)
I0323 21:06:06.682379  2864 net.cpp:150] Setting up drop7
I0323 21:06:06.682384  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.682389  2864 net.cpp:165] Memory required for data: 168882412
I0323 21:06:06.682394  2864 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0323 21:06:06.682404  2864 net.cpp:106] Creating Layer fc7_drop7_0_split
I0323 21:06:06.682410  2864 net.cpp:454] fc7_drop7_0_split <- fc7
I0323 21:06:06.682415  2864 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0323 21:06:06.682425  2864 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0323 21:06:06.682469  2864 net.cpp:150] Setting up fc7_drop7_0_split
I0323 21:06:06.682476  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.682481  2864 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:06:06.682484  2864 net.cpp:165] Memory required for data: 168915180
I0323 21:06:06.682487  2864 layer_factory.hpp:77] Creating layer cls_score
I0323 21:06:06.682499  2864 net.cpp:106] Creating Layer cls_score
I0323 21:06:06.682503  2864 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0323 21:06:06.682512  2864 net.cpp:411] cls_score -> cls_score
I0323 21:06:06.682775  2864 net.cpp:150] Setting up cls_score
I0323 21:06:06.682783  2864 net.cpp:157] Top shape: 1 2 (2)
I0323 21:06:06.682786  2864 net.cpp:165] Memory required for data: 168915188
I0323 21:06:06.682795  2864 layer_factory.hpp:77] Creating layer bbox_pred
I0323 21:06:06.682804  2864 net.cpp:106] Creating Layer bbox_pred
I0323 21:06:06.682811  2864 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0323 21:06:06.682817  2864 net.cpp:411] bbox_pred -> bbox_pred
I0323 21:06:06.683558  2864 net.cpp:150] Setting up bbox_pred
I0323 21:06:06.683568  2864 net.cpp:157] Top shape: 1 8 (8)
I0323 21:06:06.683571  2864 net.cpp:165] Memory required for data: 168915220
I0323 21:06:06.683579  2864 layer_factory.hpp:77] Creating layer loss_cls
I0323 21:06:06.683590  2864 net.cpp:106] Creating Layer loss_cls
I0323 21:06:06.683595  2864 net.cpp:454] loss_cls <- cls_score
I0323 21:06:06.683601  2864 net.cpp:454] loss_cls <- labels
I0323 21:06:06.683609  2864 net.cpp:411] loss_cls -> cls_loss
I0323 21:06:06.683619  2864 layer_factory.hpp:77] Creating layer loss_cls
I0323 21:06:06.683706  2864 net.cpp:150] Setting up loss_cls
I0323 21:06:06.683712  2864 net.cpp:157] Top shape: (1)
I0323 21:06:06.683715  2864 net.cpp:160]     with loss weight 1
I0323 21:06:06.683732  2864 net.cpp:165] Memory required for data: 168915224
I0323 21:06:06.683737  2864 layer_factory.hpp:77] Creating layer loss_bbox
I0323 21:06:06.683744  2864 net.cpp:106] Creating Layer loss_bbox
I0323 21:06:06.683749  2864 net.cpp:454] loss_bbox <- bbox_pred
I0323 21:06:06.683753  2864 net.cpp:454] loss_bbox <- bbox_targets
I0323 21:06:06.683759  2864 net.cpp:454] loss_bbox <- bbox_inside_weights
I0323 21:06:06.683763  2864 net.cpp:454] loss_bbox <- bbox_outside_weights
I0323 21:06:06.683770  2864 net.cpp:411] loss_bbox -> bbox_loss
I0323 21:06:06.683848  2864 net.cpp:150] Setting up loss_bbox
I0323 21:06:06.683856  2864 net.cpp:157] Top shape: (1)
I0323 21:06:06.683859  2864 net.cpp:160]     with loss weight 1
I0323 21:06:06.683866  2864 net.cpp:165] Memory required for data: 168915228
I0323 21:06:06.683869  2864 net.cpp:226] loss_bbox needs backward computation.
I0323 21:06:06.683876  2864 net.cpp:226] loss_cls needs backward computation.
I0323 21:06:06.683879  2864 net.cpp:226] bbox_pred needs backward computation.
I0323 21:06:06.683884  2864 net.cpp:226] cls_score needs backward computation.
I0323 21:06:06.683887  2864 net.cpp:226] fc7_drop7_0_split needs backward computation.
I0323 21:06:06.683892  2864 net.cpp:226] drop7 needs backward computation.
I0323 21:06:06.683895  2864 net.cpp:226] relu7 needs backward computation.
I0323 21:06:06.683899  2864 net.cpp:226] fc7 needs backward computation.
I0323 21:06:06.683903  2864 net.cpp:226] drop6 needs backward computation.
I0323 21:06:06.683907  2864 net.cpp:226] relu6 needs backward computation.
I0323 21:06:06.683910  2864 net.cpp:226] fc6 needs backward computation.
I0323 21:06:06.683915  2864 net.cpp:226] roi_pool_conv5 needs backward computation.
I0323 21:06:06.683920  2864 net.cpp:226] roi-data needs backward computation.
I0323 21:06:06.683926  2864 net.cpp:226] proposal needs backward computation.
I0323 21:06:06.683934  2864 net.cpp:226] rpn_cls_prob_reshape needs backward computation.
I0323 21:06:06.683939  2864 net.cpp:226] rpn_cls_prob needs backward computation.
I0323 21:06:06.683945  2864 net.cpp:226] rpn_loss_bbox needs backward computation.
I0323 21:06:06.683959  2864 net.cpp:226] rpn_loss_cls needs backward computation.
I0323 21:06:06.683967  2864 net.cpp:226] rpn-data needs backward computation.
I0323 21:06:06.683975  2864 net.cpp:226] rpn_cls_score_reshape_rpn_cls_score_reshape_0_split needs backward computation.
I0323 21:06:06.683980  2864 net.cpp:226] rpn_cls_score_reshape needs backward computation.
I0323 21:06:06.683987  2864 net.cpp:226] rpn_bbox_pred_rpn_bbox_pred_0_split needs backward computation.
I0323 21:06:06.683992  2864 net.cpp:226] rpn_bbox_pred needs backward computation.
I0323 21:06:06.684000  2864 net.cpp:226] rpn_cls_score_rpn_cls_score_0_split needs backward computation.
I0323 21:06:06.684005  2864 net.cpp:226] rpn_cls_score needs backward computation.
I0323 21:06:06.684010  2864 net.cpp:226] rpn/output_rpn_relu/3x3_0_split needs backward computation.
I0323 21:06:06.684015  2864 net.cpp:226] rpn_relu/3x3 needs backward computation.
I0323 21:06:06.684018  2864 net.cpp:226] rpn_conv/3x3 needs backward computation.
I0323 21:06:06.684026  2864 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0323 21:06:06.684031  2864 net.cpp:228] relu5 does not need backward computation.
I0323 21:06:06.684036  2864 net.cpp:228] conv5 does not need backward computation.
I0323 21:06:06.684041  2864 net.cpp:228] relu4 does not need backward computation.
I0323 21:06:06.684046  2864 net.cpp:228] conv4 does not need backward computation.
I0323 21:06:06.684049  2864 net.cpp:228] relu3 does not need backward computation.
I0323 21:06:06.684053  2864 net.cpp:228] conv3 does not need backward computation.
I0323 21:06:06.684058  2864 net.cpp:228] pool2 does not need backward computation.
I0323 21:06:06.684063  2864 net.cpp:228] norm2 does not need backward computation.
I0323 21:06:06.684070  2864 net.cpp:228] relu2 does not need backward computation.
I0323 21:06:06.684075  2864 net.cpp:228] conv2 does not need backward computation.
I0323 21:06:06.684079  2864 net.cpp:228] pool1 does not need backward computation.
I0323 21:06:06.684084  2864 net.cpp:228] norm1 does not need backward computation.
I0323 21:06:06.684089  2864 net.cpp:228] relu1 does not need backward computation.
I0323 21:06:06.684093  2864 net.cpp:228] conv1 does not need backward computation.
I0323 21:06:06.684098  2864 net.cpp:228] gt_boxes_input-data_2_split does not need backward computation.
I0323 21:06:06.684104  2864 net.cpp:228] im_info_input-data_1_split does not need backward computation.
I0323 21:06:06.684110  2864 net.cpp:228] data_input-data_0_split does not need backward computation.
I0323 21:06:06.684116  2864 net.cpp:228] input-data does not need backward computation.
I0323 21:06:06.684120  2864 net.cpp:270] This network produces output bbox_loss
I0323 21:06:06.684124  2864 net.cpp:270] This network produces output cls_loss
I0323 21:06:06.684129  2864 net.cpp:270] This network produces output rpn_cls_loss
I0323 21:06:06.684134  2864 net.cpp:270] This network produces output rpn_loss_bbox
I0323 21:06:06.684177  2864 net.cpp:283] Network initialization done.
I0323 21:06:06.684381  2864 solver.cpp:60] Solver scaffolding done.
Loading pretrained model weights from ../../data/imagenet_models/ZF.v2.caffemodel
I0323 21:06:09.408326  2864 net.cpp:816] Ignoring source layer pool5_spm6
I0323 21:06:09.408360  2864 net.cpp:816] Ignoring source layer pool5_spm6_flatten
I0323 21:06:09.458927  2864 net.cpp:816] Ignoring source layer fc8
I0323 21:06:09.458966  2864 net.cpp:816] Ignoring source layer prob
Solving...
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:166: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  fg_inds = npr.choice(fg_inds, size=fg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:177: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bg_inds = npr.choice(bg_inds, size=bg_rois_per_this_image, replace=False)
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:184: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  labels[fg_rois_per_this_image:] = 0
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:127: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_targets[ind, start:end] = bbox_target_data[ind, 1:]
/home/sgabriel/py-faster-rcnn/tools/../lib/rpn/proposal_target_layer.py:128: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  bbox_inside_weights[ind, start:end] = cfg.TRAIN.BBOX_INSIDE_WEIGHTS
I0323 21:06:10.400598  2864 solver.cpp:229] Iteration 0, loss = 2.9269
I0323 21:06:10.400646  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.000566708 (* 1 = 0.000566708 loss)
I0323 21:06:10.400655  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.655162 (* 1 = 0.655162 loss)
I0323 21:06:10.400660  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.582411 (* 1 = 0.582411 loss)
I0323 21:06:10.400665  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 2.05547 (* 1 = 2.05547 loss)
I0323 21:06:10.400676  2864 sgd_solver.cpp:106] Iteration 0, lr = 0.001
I0323 21:06:28.196959  2864 solver.cpp:229] Iteration 20, loss = 1.46342
I0323 21:06:28.197000  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.113689 (* 1 = 0.113689 loss)
I0323 21:06:28.197007  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.322573 (* 1 = 0.322573 loss)
I0323 21:06:28.197015  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.230544 (* 1 = 0.230544 loss)
I0323 21:06:28.197021  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.881633 (* 1 = 0.881633 loss)
I0323 21:06:28.197026  2864 sgd_solver.cpp:106] Iteration 20, lr = 0.001
I0323 21:06:46.814656  2864 solver.cpp:229] Iteration 40, loss = 2.22139
I0323 21:06:46.814700  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.648789 (* 1 = 0.648789 loss)
I0323 21:06:46.814707  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.385499 (* 1 = 0.385499 loss)
I0323 21:06:46.814715  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.341735 (* 1 = 0.341735 loss)
I0323 21:06:46.814723  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.742271 (* 1 = 0.742271 loss)
I0323 21:06:46.814728  2864 sgd_solver.cpp:106] Iteration 40, lr = 0.001
I0323 21:07:05.710544  2864 solver.cpp:229] Iteration 60, loss = 1.11908
I0323 21:07:05.710595  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.01913 (* 1 = 0.01913 loss)
I0323 21:07:05.710602  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.71713 (* 1 = 0.71713 loss)
I0323 21:07:05.710608  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.290606 (* 1 = 0.290606 loss)
I0323 21:07:05.710613  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.413014 (* 1 = 0.413014 loss)
I0323 21:07:05.710619  2864 sgd_solver.cpp:106] Iteration 60, lr = 0.001
I0323 21:07:25.716598  2864 solver.cpp:229] Iteration 80, loss = 1.66335
I0323 21:07:25.716642  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.135028 (* 1 = 0.135028 loss)
I0323 21:07:25.716650  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.657645 (* 1 = 0.657645 loss)
I0323 21:07:25.716655  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.247317 (* 1 = 0.247317 loss)
I0323 21:07:25.716661  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.428297 (* 1 = 0.428297 loss)
I0323 21:07:25.716668  2864 sgd_solver.cpp:106] Iteration 80, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_100.caffemodel
I0323 21:07:47.246920  2864 solver.cpp:229] Iteration 100, loss = 2.35108
I0323 21:07:47.246973  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.762707 (* 1 = 0.762707 loss)
I0323 21:07:47.246981  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.597238 (* 1 = 0.597238 loss)
I0323 21:07:47.246989  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.311483 (* 1 = 0.311483 loss)
I0323 21:07:47.246994  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0208685 (* 1 = 0.0208685 loss)
I0323 21:07:47.247001  2864 sgd_solver.cpp:106] Iteration 100, lr = 0.001
I0323 21:08:06.732563  2864 solver.cpp:229] Iteration 120, loss = 1.77017
I0323 21:08:06.732619  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.739695 (* 1 = 0.739695 loss)
I0323 21:08:06.732625  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.534433 (* 1 = 0.534433 loss)
I0323 21:08:06.732630  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.331169 (* 1 = 0.331169 loss)
I0323 21:08:06.732637  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0719898 (* 1 = 0.0719898 loss)
I0323 21:08:06.732645  2864 sgd_solver.cpp:106] Iteration 120, lr = 0.001
I0323 21:08:26.694211  2864 solver.cpp:229] Iteration 140, loss = 1.2924
I0323 21:08:26.694252  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.506568 (* 1 = 0.506568 loss)
I0323 21:08:26.694258  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.584201 (* 1 = 0.584201 loss)
I0323 21:08:26.694275  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.22185 (* 1 = 0.22185 loss)
I0323 21:08:26.694281  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0386318 (* 1 = 0.0386318 loss)
I0323 21:08:26.694288  2864 sgd_solver.cpp:106] Iteration 140, lr = 0.001
I0323 21:08:46.713657  2864 solver.cpp:229] Iteration 160, loss = 1.6449
I0323 21:08:46.713701  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.436555 (* 1 = 0.436555 loss)
I0323 21:08:46.713708  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.472685 (* 1 = 0.472685 loss)
I0323 21:08:46.713727  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.282008 (* 1 = 0.282008 loss)
I0323 21:08:46.713745  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00736909 (* 1 = 0.00736909 loss)
I0323 21:08:46.713763  2864 sgd_solver.cpp:106] Iteration 160, lr = 0.001
I0323 21:09:06.044654  2864 solver.cpp:229] Iteration 180, loss = 1.41017
I0323 21:09:06.044704  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.532445 (* 1 = 0.532445 loss)
I0323 21:09:06.044713  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.463587 (* 1 = 0.463587 loss)
I0323 21:09:06.044718  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.189299 (* 1 = 0.189299 loss)
I0323 21:09:06.044723  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0677093 (* 1 = 0.0677093 loss)
I0323 21:09:06.044728  2864 sgd_solver.cpp:106] Iteration 180, lr = 0.001
speed: 0.968s / iter
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_200.caffemodel
I0323 21:09:29.626574  2864 solver.cpp:229] Iteration 200, loss = 1.53093
I0323 21:09:29.626624  2864 solver.cpp:245]     Train net output #0: bbox_loss = 1.35413 (* 1 = 1.35413 loss)
I0323 21:09:29.626636  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.389188 (* 1 = 0.389188 loss)
I0323 21:09:29.626642  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.197096 (* 1 = 0.197096 loss)
I0323 21:09:29.626649  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0415609 (* 1 = 0.0415609 loss)
I0323 21:09:29.626659  2864 sgd_solver.cpp:106] Iteration 200, lr = 0.001
I0323 21:09:49.265261  2864 solver.cpp:229] Iteration 220, loss = 1.08316
I0323 21:09:49.265296  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.498894 (* 1 = 0.498894 loss)
I0323 21:09:49.265305  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.536201 (* 1 = 0.536201 loss)
I0323 21:09:49.265311  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.329885 (* 1 = 0.329885 loss)
I0323 21:09:49.265317  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00188027 (* 1 = 0.00188027 loss)
I0323 21:09:49.265324  2864 sgd_solver.cpp:106] Iteration 220, lr = 0.001
I0323 21:10:08.766474  2864 solver.cpp:229] Iteration 240, loss = 1.61041
I0323 21:10:08.766517  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.479814 (* 1 = 0.479814 loss)
I0323 21:10:08.766525  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.455364 (* 1 = 0.455364 loss)
I0323 21:10:08.766542  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.239522 (* 1 = 0.239522 loss)
I0323 21:10:08.766548  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.516629 (* 1 = 0.516629 loss)
I0323 21:10:08.766556  2864 sgd_solver.cpp:106] Iteration 240, lr = 0.001
I0323 21:10:28.519774  2864 solver.cpp:229] Iteration 260, loss = 1.15373
I0323 21:10:28.519827  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0119697 (* 1 = 0.0119697 loss)
I0323 21:10:28.519835  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.36603 (* 1 = 0.36603 loss)
I0323 21:10:28.519842  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.175623 (* 1 = 0.175623 loss)
I0323 21:10:28.519847  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.456533 (* 1 = 0.456533 loss)
I0323 21:10:28.519852  2864 sgd_solver.cpp:106] Iteration 260, lr = 0.001
I0323 21:10:48.898010  2864 solver.cpp:229] Iteration 280, loss = 1.51977
I0323 21:10:48.898061  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0112209 (* 1 = 0.0112209 loss)
I0323 21:10:48.898068  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.57827 (* 1 = 0.57827 loss)
I0323 21:10:48.898075  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.27364 (* 1 = 0.27364 loss)
I0323 21:10:48.898080  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.607239 (* 1 = 0.607239 loss)
I0323 21:10:48.898085  2864 sgd_solver.cpp:106] Iteration 280, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_300.caffemodel
I0323 21:11:14.316624  2864 solver.cpp:229] Iteration 300, loss = 1.90554
I0323 21:11:14.316673  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0258418 (* 1 = 0.0258418 loss)
I0323 21:11:14.316682  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.490447 (* 1 = 0.490447 loss)
I0323 21:11:14.316689  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.41644 (* 1 = 0.41644 loss)
I0323 21:11:14.316694  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.600348 (* 1 = 0.600348 loss)
I0323 21:11:14.316701  2864 sgd_solver.cpp:106] Iteration 300, lr = 0.001
I0323 21:11:35.229337  2864 solver.cpp:229] Iteration 320, loss = 1.25027
I0323 21:11:35.229379  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.000810741 (* 1 = 0.000810741 loss)
I0323 21:11:35.229387  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.51557 (* 1 = 0.51557 loss)
I0323 21:11:35.229394  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.256252 (* 1 = 0.256252 loss)
I0323 21:11:35.229400  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.854662 (* 1 = 0.854662 loss)
I0323 21:11:35.229408  2864 sgd_solver.cpp:106] Iteration 320, lr = 0.001
I0323 21:11:56.686703  2864 solver.cpp:229] Iteration 340, loss = 1.5677
I0323 21:11:56.686756  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.664693 (* 1 = 0.664693 loss)
I0323 21:11:56.686764  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.451887 (* 1 = 0.451887 loss)
I0323 21:11:56.686769  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.194727 (* 1 = 0.194727 loss)
I0323 21:11:56.686774  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.177142 (* 1 = 0.177142 loss)
I0323 21:11:56.686780  2864 sgd_solver.cpp:106] Iteration 340, lr = 0.001
I0323 21:12:16.893122  2864 solver.cpp:229] Iteration 360, loss = 1.78295
I0323 21:12:16.893173  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.585717 (* 1 = 0.585717 loss)
I0323 21:12:16.893180  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.687275 (* 1 = 0.687275 loss)
I0323 21:12:16.893185  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.155176 (* 1 = 0.155176 loss)
I0323 21:12:16.893203  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0119369 (* 1 = 0.0119369 loss)
I0323 21:12:16.893210  2864 sgd_solver.cpp:106] Iteration 360, lr = 0.001
I0323 21:12:35.937841  2864 solver.cpp:229] Iteration 380, loss = 1.24531
I0323 21:12:35.937894  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.526078 (* 1 = 0.526078 loss)
I0323 21:12:35.937901  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.453231 (* 1 = 0.453231 loss)
I0323 21:12:35.937906  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.161508 (* 1 = 0.161508 loss)
I0323 21:12:35.937923  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0539065 (* 1 = 0.0539065 loss)
I0323 21:12:35.937930  2864 sgd_solver.cpp:106] Iteration 380, lr = 0.001
speed: 0.987s / iter
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_400.caffemodel
I0323 21:12:58.136656  2864 solver.cpp:229] Iteration 400, loss = 1.43885
I0323 21:12:58.136698  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.68164 (* 1 = 0.68164 loss)
I0323 21:12:58.136708  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.294714 (* 1 = 0.294714 loss)
I0323 21:12:58.136713  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.17143 (* 1 = 0.17143 loss)
I0323 21:12:58.136719  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.542776 (* 1 = 0.542776 loss)
I0323 21:12:58.136726  2864 sgd_solver.cpp:106] Iteration 400, lr = 0.001
I0323 21:13:18.995916  2864 solver.cpp:229] Iteration 420, loss = 1.01931
I0323 21:13:18.995965  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.164598 (* 1 = 0.164598 loss)
I0323 21:13:18.995973  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.382596 (* 1 = 0.382596 loss)
I0323 21:13:18.995980  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.221345 (* 1 = 0.221345 loss)
I0323 21:13:18.995986  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.162846 (* 1 = 0.162846 loss)
I0323 21:13:18.995993  2864 sgd_solver.cpp:106] Iteration 420, lr = 0.001
I0323 21:13:38.347635  2864 solver.cpp:229] Iteration 440, loss = 1.52552
I0323 21:13:38.347679  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.997719 (* 1 = 0.997719 loss)
I0323 21:13:38.347687  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.730527 (* 1 = 0.730527 loss)
I0323 21:13:38.347692  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.273235 (* 1 = 0.273235 loss)
I0323 21:13:38.347698  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.161017 (* 1 = 0.161017 loss)
I0323 21:13:38.347703  2864 sgd_solver.cpp:106] Iteration 440, lr = 0.001
I0323 21:13:59.072597  2864 solver.cpp:229] Iteration 460, loss = 2.1022
I0323 21:13:59.072650  2864 solver.cpp:245]     Train net output #0: bbox_loss = 1.13469 (* 1 = 1.13469 loss)
I0323 21:13:59.072659  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.46324 (* 1 = 0.46324 loss)
I0323 21:13:59.072665  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.346278 (* 1 = 0.346278 loss)
I0323 21:13:59.072671  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0809461 (* 1 = 0.0809461 loss)
I0323 21:13:59.072679  2864 sgd_solver.cpp:106] Iteration 460, lr = 0.001
I0323 21:14:19.070552  2864 solver.cpp:229] Iteration 480, loss = 1.77537
I0323 21:14:19.070605  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.385683 (* 1 = 0.385683 loss)
I0323 21:14:19.070611  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.542577 (* 1 = 0.542577 loss)
I0323 21:14:19.070616  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.422034 (* 1 = 0.422034 loss)
I0323 21:14:19.070633  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.533542 (* 1 = 0.533542 loss)
I0323 21:14:19.070639  2864 sgd_solver.cpp:106] Iteration 480, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_500.caffemodel
I0323 21:14:42.516556  2864 solver.cpp:229] Iteration 500, loss = 1.02316
I0323 21:14:42.516610  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.021753 (* 1 = 0.021753 loss)
I0323 21:14:42.516618  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.423945 (* 1 = 0.423945 loss)
I0323 21:14:42.516623  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.183555 (* 1 = 0.183555 loss)
I0323 21:14:42.516629  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0648338 (* 1 = 0.0648338 loss)
I0323 21:14:42.516638  2864 sgd_solver.cpp:106] Iteration 500, lr = 0.001
I0323 21:15:03.148732  2864 solver.cpp:229] Iteration 520, loss = 1.35852
I0323 21:15:03.148785  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.307532 (* 1 = 0.307532 loss)
I0323 21:15:03.148793  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.479538 (* 1 = 0.479538 loss)
I0323 21:15:03.148798  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.153708 (* 1 = 0.153708 loss)
I0323 21:15:03.148802  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.613723 (* 1 = 0.613723 loss)
I0323 21:15:03.148808  2864 sgd_solver.cpp:106] Iteration 520, lr = 0.001
I0323 21:15:23.113025  2864 solver.cpp:229] Iteration 540, loss = 0.977596
I0323 21:15:23.113091  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.00781089 (* 1 = 0.00781089 loss)
I0323 21:15:23.113098  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.528601 (* 1 = 0.528601 loss)
I0323 21:15:23.113104  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.162398 (* 1 = 0.162398 loss)
I0323 21:15:23.113109  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.191814 (* 1 = 0.191814 loss)
I0323 21:15:23.113126  2864 sgd_solver.cpp:106] Iteration 540, lr = 0.001
I0323 21:15:42.141206  2864 solver.cpp:229] Iteration 560, loss = 0.846251
I0323 21:15:42.141250  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0179436 (* 1 = 0.0179436 loss)
I0323 21:15:42.141258  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.280403 (* 1 = 0.280403 loss)
I0323 21:15:42.141263  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.180077 (* 1 = 0.180077 loss)
I0323 21:15:42.141269  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00227238 (* 1 = 0.00227238 loss)
I0323 21:15:42.141276  2864 sgd_solver.cpp:106] Iteration 560, lr = 0.001
I0323 21:16:01.624379  2864 solver.cpp:229] Iteration 580, loss = 1.16833
I0323 21:16:01.624430  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.00728761 (* 1 = 0.00728761 loss)
I0323 21:16:01.624439  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.355463 (* 1 = 0.355463 loss)
I0323 21:16:01.624444  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.158366 (* 1 = 0.158366 loss)
I0323 21:16:01.624449  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.129557 (* 1 = 0.129557 loss)
I0323 21:16:01.624455  2864 sgd_solver.cpp:106] Iteration 580, lr = 0.001
speed: 0.990s / iter
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_600.caffemodel
I0323 21:16:23.561942  2864 solver.cpp:229] Iteration 600, loss = 1.7676
I0323 21:16:23.561988  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.519613 (* 1 = 0.519613 loss)
I0323 21:16:23.561995  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.436911 (* 1 = 0.436911 loss)
I0323 21:16:23.562000  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.143912 (* 1 = 0.143912 loss)
I0323 21:16:23.562018  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.142496 (* 1 = 0.142496 loss)
I0323 21:16:23.562023  2864 sgd_solver.cpp:106] Iteration 600, lr = 0.001
I0323 21:16:42.299654  2864 solver.cpp:229] Iteration 620, loss = 1.14889
I0323 21:16:42.299700  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.565967 (* 1 = 0.565967 loss)
I0323 21:16:42.299707  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.446596 (* 1 = 0.446596 loss)
I0323 21:16:42.299726  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.333652 (* 1 = 0.333652 loss)
I0323 21:16:42.299732  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0674281 (* 1 = 0.0674281 loss)
I0323 21:16:42.299739  2864 sgd_solver.cpp:106] Iteration 620, lr = 0.001
I0323 21:17:01.824252  2864 solver.cpp:229] Iteration 640, loss = 0.964743
I0323 21:17:01.824295  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0149212 (* 1 = 0.0149212 loss)
I0323 21:17:01.824302  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.499555 (* 1 = 0.499555 loss)
I0323 21:17:01.824308  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.201109 (* 1 = 0.201109 loss)
I0323 21:17:01.824314  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0808517 (* 1 = 0.0808517 loss)
I0323 21:17:01.824321  2864 sgd_solver.cpp:106] Iteration 640, lr = 0.001
I0323 21:17:22.228895  2864 solver.cpp:229] Iteration 660, loss = 1.50476
I0323 21:17:22.228945  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.608898 (* 1 = 0.608898 loss)
I0323 21:17:22.228958  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.567695 (* 1 = 0.567695 loss)
I0323 21:17:22.228965  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.159908 (* 1 = 0.159908 loss)
I0323 21:17:22.228970  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.360992 (* 1 = 0.360992 loss)
I0323 21:17:22.228976  2864 sgd_solver.cpp:106] Iteration 660, lr = 0.001
I0323 21:17:41.791347  2864 solver.cpp:229] Iteration 680, loss = 1.39638
I0323 21:17:41.791388  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0026879 (* 1 = 0.0026879 loss)
I0323 21:17:41.791395  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.237511 (* 1 = 0.237511 loss)
I0323 21:17:41.791414  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.197938 (* 1 = 0.197938 loss)
I0323 21:17:41.791420  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.194451 (* 1 = 0.194451 loss)
I0323 21:17:41.791427  2864 sgd_solver.cpp:106] Iteration 680, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_700.caffemodel
I0323 21:18:04.403206  2864 solver.cpp:229] Iteration 700, loss = 1.43714
I0323 21:18:04.403257  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0182756 (* 1 = 0.0182756 loss)
I0323 21:18:04.403265  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.704908 (* 1 = 0.704908 loss)
I0323 21:18:04.403272  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.321084 (* 1 = 0.321084 loss)
I0323 21:18:04.403277  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.190085 (* 1 = 0.190085 loss)
I0323 21:18:04.403285  2864 sgd_solver.cpp:106] Iteration 700, lr = 0.001
I0323 21:18:24.323354  2864 solver.cpp:229] Iteration 720, loss = 1.7297
I0323 21:18:24.323392  2864 solver.cpp:245]     Train net output #0: bbox_loss = 1.10526 (* 1 = 1.10526 loss)
I0323 21:18:24.323400  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.885384 (* 1 = 0.885384 loss)
I0323 21:18:24.323405  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.235452 (* 1 = 0.235452 loss)
I0323 21:18:24.323423  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.301985 (* 1 = 0.301985 loss)
I0323 21:18:24.323429  2864 sgd_solver.cpp:106] Iteration 720, lr = 0.001
I0323 21:18:41.683148  2864 solver.cpp:229] Iteration 740, loss = 1.10525
I0323 21:18:41.683199  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.277022 (* 1 = 0.277022 loss)
I0323 21:18:41.683207  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.39163 (* 1 = 0.39163 loss)
I0323 21:18:41.683212  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.187124 (* 1 = 0.187124 loss)
I0323 21:18:41.683217  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0676628 (* 1 = 0.0676628 loss)
I0323 21:18:41.683221  2864 sgd_solver.cpp:106] Iteration 740, lr = 0.001
I0323 21:19:00.908115  2864 solver.cpp:229] Iteration 760, loss = 1.20388
I0323 21:19:00.908156  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.100606 (* 1 = 0.100606 loss)
I0323 21:19:00.908164  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.552858 (* 1 = 0.552858 loss)
I0323 21:19:00.908169  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.154671 (* 1 = 0.154671 loss)
I0323 21:19:00.908175  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.574401 (* 1 = 0.574401 loss)
I0323 21:19:00.908181  2864 sgd_solver.cpp:106] Iteration 760, lr = 0.001
I0323 21:19:19.499426  2864 solver.cpp:229] Iteration 780, loss = 1.18456
I0323 21:19:19.499475  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.11108 (* 1 = 0.11108 loss)
I0323 21:19:19.499483  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.692998 (* 1 = 0.692998 loss)
I0323 21:19:19.499491  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.13365 (* 1 = 0.13365 loss)
I0323 21:19:19.499497  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0809217 (* 1 = 0.0809217 loss)
I0323 21:19:19.499505  2864 sgd_solver.cpp:106] Iteration 780, lr = 0.001
speed: 0.981s / iter
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_800.caffemodel
I0323 21:19:42.221434  2864 solver.cpp:229] Iteration 800, loss = 1.75634
I0323 21:19:42.221489  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.150998 (* 1 = 0.150998 loss)
I0323 21:19:42.221504  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.865482 (* 1 = 0.865482 loss)
I0323 21:19:42.221515  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.266617 (* 1 = 0.266617 loss)
I0323 21:19:42.221525  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 1.04186 (* 1 = 1.04186 loss)
I0323 21:19:42.221535  2864 sgd_solver.cpp:106] Iteration 800, lr = 0.001
I0323 21:20:01.906919  2864 solver.cpp:229] Iteration 820, loss = 1.55156
I0323 21:20:01.906978  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.103865 (* 1 = 0.103865 loss)
I0323 21:20:01.906986  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.455509 (* 1 = 0.455509 loss)
I0323 21:20:01.906992  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.224138 (* 1 = 0.224138 loss)
I0323 21:20:01.906998  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.178631 (* 1 = 0.178631 loss)
I0323 21:20:01.907006  2864 sgd_solver.cpp:106] Iteration 820, lr = 0.001
I0323 21:20:21.483150  2864 solver.cpp:229] Iteration 840, loss = 0.93686
I0323 21:20:21.483192  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0886574 (* 1 = 0.0886574 loss)
I0323 21:20:21.483201  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.306138 (* 1 = 0.306138 loss)
I0323 21:20:21.483206  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.251007 (* 1 = 0.251007 loss)
I0323 21:20:21.483211  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.146933 (* 1 = 0.146933 loss)
I0323 21:20:21.483218  2864 sgd_solver.cpp:106] Iteration 840, lr = 0.001
I0323 21:20:39.970260  2864 solver.cpp:229] Iteration 860, loss = 1.27627
I0323 21:20:39.970301  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.154421 (* 1 = 0.154421 loss)
I0323 21:20:39.970309  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.51853 (* 1 = 0.51853 loss)
I0323 21:20:39.970314  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.157852 (* 1 = 0.157852 loss)
I0323 21:20:39.970320  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.259117 (* 1 = 0.259117 loss)
I0323 21:20:39.970325  2864 sgd_solver.cpp:106] Iteration 860, lr = 0.001
I0323 21:20:58.672520  2864 solver.cpp:229] Iteration 880, loss = 0.836852
I0323 21:20:58.672572  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.0101073 (* 1 = 0.0101073 loss)
I0323 21:20:58.672580  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.458592 (* 1 = 0.458592 loss)
I0323 21:20:58.672585  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.24774 (* 1 = 0.24774 loss)
I0323 21:20:58.672590  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00870906 (* 1 = 0.00870906 loss)
I0323 21:20:58.672596  2864 sgd_solver.cpp:106] Iteration 880, lr = 0.001
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_900.caffemodel
I0323 21:21:20.528901  2864 solver.cpp:229] Iteration 900, loss = 1.089
I0323 21:21:20.528946  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.407852 (* 1 = 0.407852 loss)
I0323 21:21:20.528960  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.319707 (* 1 = 0.319707 loss)
I0323 21:21:20.528967  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.146533 (* 1 = 0.146533 loss)
I0323 21:21:20.528973  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.00811804 (* 1 = 0.00811804 loss)
I0323 21:21:20.528980  2864 sgd_solver.cpp:106] Iteration 900, lr = 0.001
I0323 21:21:39.496541  2864 solver.cpp:229] Iteration 920, loss = 1.36007
I0323 21:21:39.496589  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.998093 (* 1 = 0.998093 loss)
I0323 21:21:39.496598  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.537685 (* 1 = 0.537685 loss)
I0323 21:21:39.496603  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.136685 (* 1 = 0.136685 loss)
I0323 21:21:39.496608  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0472507 (* 1 = 0.0472507 loss)
I0323 21:21:39.496615  2864 sgd_solver.cpp:106] Iteration 920, lr = 0.001
I0323 21:21:58.668715  2864 solver.cpp:229] Iteration 940, loss = 1.3908
I0323 21:21:58.668777  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.727939 (* 1 = 0.727939 loss)
I0323 21:21:58.668784  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.372044 (* 1 = 0.372044 loss)
I0323 21:21:58.668800  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.164542 (* 1 = 0.164542 loss)
I0323 21:21:58.668807  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.110735 (* 1 = 0.110735 loss)
I0323 21:21:58.668814  2864 sgd_solver.cpp:106] Iteration 940, lr = 0.001
I0323 21:22:19.151669  2864 solver.cpp:229] Iteration 960, loss = 1.21306
I0323 21:22:19.151710  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.653016 (* 1 = 0.653016 loss)
I0323 21:22:19.151718  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.401479 (* 1 = 0.401479 loss)
I0323 21:22:19.151734  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.0749919 (* 1 = 0.0749919 loss)
I0323 21:22:19.151741  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.101229 (* 1 = 0.101229 loss)
I0323 21:22:19.151748  2864 sgd_solver.cpp:106] Iteration 960, lr = 0.001
I0323 21:22:38.353554  2864 solver.cpp:229] Iteration 980, loss = 1.12289
I0323 21:22:38.353597  2864 solver.cpp:245]     Train net output #0: bbox_loss = 0.157399 (* 1 = 0.157399 loss)
I0323 21:22:38.353605  2864 solver.cpp:245]     Train net output #1: cls_loss = 0.469296 (* 1 = 0.469296 loss)
I0323 21:22:38.353611  2864 solver.cpp:245]     Train net output #2: rpn_cls_loss = 0.189511 (* 1 = 0.189511 loss)
I0323 21:22:38.353618  2864 solver.cpp:245]     Train net output #3: rpn_loss_bbox = 0.0899179 (* 1 = 0.0899179 loss)
I0323 21:22:38.353624  2864 sgd_solver.cpp:106] Iteration 980, lr = 0.001
speed: 0.978s / iter
Wrote snapshot to: /home/sgabriel/py-faster-rcnn/output/default/voc_2007_trainval/zf_faster_rcnn_iter_1000.caffemodel
done solving

real	17m7.509s
user	21m2.897s
sys	0m10.833s
+ set +x
grep: experiments/logs/faster_rcnn_end2end_ZF_.txt.2017-03-23_21-05-52: No such file or directory
+ echo

+ ../../tools/test_net.py --gpu 1 --def ../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt --net ../../output/default/voc_2007_trainval/zf_faster_rcnn_iter_10000.caffemodel --imdb CNNDATA_trainval --cfg ../../experiments/cfgs/roost.yml
<function <lambda> at 0x2aaad9d05e60>
<function <lambda> at 0x2aaad9d05ed8>
<function <lambda> at 0x2aaad9d05f50>
<function <lambda> at 0x2aaad9d0a050>
Called with args:
Namespace(caffemodel='../../output/default/voc_2007_trainval/zf_faster_rcnn_iter_10000.caffemodel', cfg_file='../../experiments/cfgs/roost.yml', comp_mode=False, gpu_id=1, imdb_name='CNNDATA_trainval', max_per_image=100, prototxt='../../models/pascal_voc/ZF/faster_rcnn_end2end/test.prototxt', set_cfgs=None, vis=False, wait=True)
Using config:
{'DATA_DIR': '/home/sgabriel/py-faster-rcnn/data',
 'DEDUP_BOXES': 0.0625,
 'EPS': 1e-14,
 'EXP_DIR': 'faster_rcnn_end2end',
 'GPU_ID': 1,
 'MATLAB': 'matlab',
 'MODELS_DIR': '/home/sgabriel/py-faster-rcnn/models/pascal_voc',
 'PIXEL_MEANS': array([[[ 102.9801,  115.9465,  122.7717]]]),
 'RNG_SEED': 17,
 'ROOT_DIR': '/home/sgabriel/py-faster-rcnn',
 'TEST': {'BBOX_REG': False,
          'HAS_RPN': True,
          'MAX_SIZE': 600,
          'NMS': 0.3,
          'PROPOSAL_METHOD': 'selective_search',
          'RPN_MIN_SIZE': 16,
          'RPN_NMS_THRESH': 0.7,
          'RPN_POST_NMS_TOP_N': 300,
          'RPN_PRE_NMS_TOP_N': 6000,
          'SCALES': [600],
          'SVM': False},
 'TRAIN': {'ASPECT_GROUPING': True,
           'BATCH_SIZE': 4,
           'BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'BBOX_NORMALIZE_MEANS': [0.0, 0.0, 0.0, 0.0],
           'BBOX_NORMALIZE_STDS': [0.1, 0.1, 0.2, 0.2],
           'BBOX_NORMALIZE_TARGETS': True,
           'BBOX_NORMALIZE_TARGETS_PRECOMPUTED': True,
           'BBOX_REG': False,
           'BBOX_THRESH': 0.5,
           'BG_THRESH_HI': 0.5,
           'BG_THRESH_LO': 0.0,
           'FG_FRACTION': 0.25,
           'FG_THRESH': 0.5,
           'HAS_RPN': True,
           'IMS_PER_BATCH': 1,
           'MAX_SIZE': 600,
           'PROPOSAL_METHOD': 'gt',
           'RPN_BATCHSIZE': 256,
           'RPN_BBOX_INSIDE_WEIGHTS': [1.0, 1.0, 1.0, 1.0],
           'RPN_CLOBBER_POSITIVES': False,
           'RPN_FG_FRACTION': 0.5,
           'RPN_MIN_SIZE': 16,
           'RPN_NEGATIVE_OVERLAP': 0.3,
           'RPN_NMS_THRESH': 0.7,
           'RPN_POSITIVE_OVERLAP': 0.7,
           'RPN_POSITIVE_WEIGHT': -1.0,
           'RPN_POST_NMS_TOP_N': 2000,
           'RPN_PRE_NMS_TOP_N': 12000,
           'SCALES': [600],
           'SNAPSHOT_INFIX': '',
           'SNAPSHOT_ITERS': 100,
           'USE_FLIPPED': True,
           'USE_PREFETCH': False},
 'USE_GPU_NMS': False}
../../tools/test_net.py:80: RuntimeWarning: to-Python converter for boost::shared_ptr<caffe::Blob<float> > already registered; second conversion method ignored.
  caffe.set_mode_gpu()
WARNING: Logging before InitGoogleLogging() is written to STDERR
I0323 21:23:02.500985  3312 net.cpp:49] Initializing net from parameters: 
name: "ZF"
input: "data"
input: "im_info"
state {
  phase: TEST
}
input_shape {
  dim: 1
  dim: 3
  dim: 224
  dim: 224
}
input_shape {
  dim: 1
  dim: 3
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  convolution_param {
    num_output: 96
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    stride: 2
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 3
    alpha: 5e-05
    beta: 0.75
    norm_region: WITHIN_CHANNEL
    engine: CAFFE
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "rpn_conv/3x3"
  type: "Convolution"
  bottom: "conv5"
  top: "rpn/output"
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_relu/3x3"
  type: "ReLU"
  bottom: "rpn/output"
  top: "rpn/output"
}
layer {
  name: "rpn_cls_score"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_cls_score"
  convolution_param {
    num_output: 18
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_bbox_pred"
  type: "Convolution"
  bottom: "rpn/output"
  top: "rpn_bbox_pred"
  convolution_param {
    num_output: 36
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "rpn_cls_score_reshape"
  type: "Reshape"
  bottom: "rpn_cls_score"
  top: "rpn_cls_score_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 2
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "rpn_cls_prob"
  type: "Softmax"
  bottom: "rpn_cls_score_reshape"
  top: "rpn_cls_prob"
}
layer {
  name: "rpn_cls_prob_reshape"
  type: "Reshape"
  bottom: "rpn_cls_prob"
  top: "rpn_cls_prob_reshape"
  reshape_param {
    shape {
      dim: 0
      dim: 18
      dim: -1
      dim: 0
    }
  }
}
layer {
  name: "proposal"
  type: "Python"
  bottom: "rpn_cls_prob_reshape"
  bottom: "rpn_bbox_pred"
  bottom: "im_info"
  top: "rois"
  python_param {
    module: "rpn.proposal_layer"
    layer: "ProposalLayer"
    param_str: "\'feat_stride\': 16"
  }
}
layer {
  name: "roi_pool_conv5"
  type: "ROIPooling"
  bottom: "conv5"
  bottom: "rois"
  top: "roi_pool_conv5"
  roi_pooling_param {
    pooled_h: 6
    pooled_w: 6
    spatial_scale: 0.0625
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "roi_pool_conv5"
  top: "fc6"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
    scale_train: false
  }
}
layer {
  name: "cls_score"
  type: "InnerProduct"
  bottom: "fc7"
  top: "cls_score"
  inner_product_param {
    num_output: 2
  }
}
layer {
  name: "bbox_pred"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bbox_pred"
  inner_product_param {
    num_output: 8
  }
}
layer {
  name: "cls_prob"
  type: "Softmax"
  bottom: "cls_score"
  top: "cls_prob"
  loss_param {
    ignore_label: -1
    normalize: true
  }
}
I0323 21:23:02.501263  3312 net.cpp:413] Input 0 -> data
I0323 21:23:02.542593  3312 net.cpp:413] Input 1 -> im_info
I0323 21:23:02.542659  3312 layer_factory.hpp:77] Creating layer conv1
I0323 21:23:02.542686  3312 net.cpp:106] Creating Layer conv1
I0323 21:23:02.542692  3312 net.cpp:454] conv1 <- data
I0323 21:23:02.542701  3312 net.cpp:411] conv1 -> conv1
I0323 21:23:02.543710  3312 net.cpp:150] Setting up conv1
I0323 21:23:02.543730  3312 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0323 21:23:02.543735  3312 net.cpp:165] Memory required for data: 4816896
I0323 21:23:02.543752  3312 layer_factory.hpp:77] Creating layer relu1
I0323 21:23:02.543766  3312 net.cpp:106] Creating Layer relu1
I0323 21:23:02.543771  3312 net.cpp:454] relu1 <- conv1
I0323 21:23:02.543777  3312 net.cpp:397] relu1 -> conv1 (in-place)
I0323 21:23:02.543788  3312 net.cpp:150] Setting up relu1
I0323 21:23:02.543795  3312 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0323 21:23:02.543800  3312 net.cpp:165] Memory required for data: 9633792
I0323 21:23:02.543803  3312 layer_factory.hpp:77] Creating layer norm1
I0323 21:23:02.543815  3312 net.cpp:106] Creating Layer norm1
I0323 21:23:02.543820  3312 net.cpp:454] norm1 <- conv1
I0323 21:23:02.543825  3312 net.cpp:411] norm1 -> norm1
I0323 21:23:02.543969  3312 net.cpp:150] Setting up norm1
I0323 21:23:02.543978  3312 net.cpp:157] Top shape: 1 96 112 112 (1204224)
I0323 21:23:02.543983  3312 net.cpp:165] Memory required for data: 14450688
I0323 21:23:02.543989  3312 layer_factory.hpp:77] Creating layer pool1
I0323 21:23:02.543998  3312 net.cpp:106] Creating Layer pool1
I0323 21:23:02.544001  3312 net.cpp:454] pool1 <- norm1
I0323 21:23:02.544009  3312 net.cpp:411] pool1 -> pool1
I0323 21:23:02.544051  3312 net.cpp:150] Setting up pool1
I0323 21:23:02.544059  3312 net.cpp:157] Top shape: 1 96 57 57 (311904)
I0323 21:23:02.544062  3312 net.cpp:165] Memory required for data: 15698304
I0323 21:23:02.544067  3312 layer_factory.hpp:77] Creating layer conv2
I0323 21:23:02.544080  3312 net.cpp:106] Creating Layer conv2
I0323 21:23:02.544085  3312 net.cpp:454] conv2 <- pool1
I0323 21:23:02.544090  3312 net.cpp:411] conv2 -> conv2
I0323 21:23:02.547312  3312 net.cpp:150] Setting up conv2
I0323 21:23:02.547330  3312 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0323 21:23:02.547334  3312 net.cpp:165] Memory required for data: 16559488
I0323 21:23:02.547348  3312 layer_factory.hpp:77] Creating layer relu2
I0323 21:23:02.547360  3312 net.cpp:106] Creating Layer relu2
I0323 21:23:02.547366  3312 net.cpp:454] relu2 <- conv2
I0323 21:23:02.547374  3312 net.cpp:397] relu2 -> conv2 (in-place)
I0323 21:23:02.547384  3312 net.cpp:150] Setting up relu2
I0323 21:23:02.547390  3312 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0323 21:23:02.547395  3312 net.cpp:165] Memory required for data: 17420672
I0323 21:23:02.547400  3312 layer_factory.hpp:77] Creating layer norm2
I0323 21:23:02.547410  3312 net.cpp:106] Creating Layer norm2
I0323 21:23:02.547415  3312 net.cpp:454] norm2 <- conv2
I0323 21:23:02.547421  3312 net.cpp:411] norm2 -> norm2
I0323 21:23:02.547549  3312 net.cpp:150] Setting up norm2
I0323 21:23:02.547560  3312 net.cpp:157] Top shape: 1 256 29 29 (215296)
I0323 21:23:02.547564  3312 net.cpp:165] Memory required for data: 18281856
I0323 21:23:02.547570  3312 layer_factory.hpp:77] Creating layer pool2
I0323 21:23:02.547579  3312 net.cpp:106] Creating Layer pool2
I0323 21:23:02.547585  3312 net.cpp:454] pool2 <- norm2
I0323 21:23:02.547592  3312 net.cpp:411] pool2 -> pool2
I0323 21:23:02.547636  3312 net.cpp:150] Setting up pool2
I0323 21:23:02.547644  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.547647  3312 net.cpp:165] Memory required for data: 18512256
I0323 21:23:02.547652  3312 layer_factory.hpp:77] Creating layer conv3
I0323 21:23:02.547667  3312 net.cpp:106] Creating Layer conv3
I0323 21:23:02.547674  3312 net.cpp:454] conv3 <- pool2
I0323 21:23:02.547685  3312 net.cpp:411] conv3 -> conv3
I0323 21:23:02.550668  3312 net.cpp:150] Setting up conv3
I0323 21:23:02.550683  3312 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0323 21:23:02.550686  3312 net.cpp:165] Memory required for data: 18857856
I0323 21:23:02.550698  3312 layer_factory.hpp:77] Creating layer relu3
I0323 21:23:02.550709  3312 net.cpp:106] Creating Layer relu3
I0323 21:23:02.550714  3312 net.cpp:454] relu3 <- conv3
I0323 21:23:02.550719  3312 net.cpp:397] relu3 -> conv3 (in-place)
I0323 21:23:02.550729  3312 net.cpp:150] Setting up relu3
I0323 21:23:02.550734  3312 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0323 21:23:02.550737  3312 net.cpp:165] Memory required for data: 19203456
I0323 21:23:02.550741  3312 layer_factory.hpp:77] Creating layer conv4
I0323 21:23:02.550751  3312 net.cpp:106] Creating Layer conv4
I0323 21:23:02.550756  3312 net.cpp:454] conv4 <- conv3
I0323 21:23:02.550761  3312 net.cpp:411] conv4 -> conv4
I0323 21:23:02.554978  3312 net.cpp:150] Setting up conv4
I0323 21:23:02.554994  3312 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0323 21:23:02.554999  3312 net.cpp:165] Memory required for data: 19549056
I0323 21:23:02.555008  3312 layer_factory.hpp:77] Creating layer relu4
I0323 21:23:02.555017  3312 net.cpp:106] Creating Layer relu4
I0323 21:23:02.555022  3312 net.cpp:454] relu4 <- conv4
I0323 21:23:02.555029  3312 net.cpp:397] relu4 -> conv4 (in-place)
I0323 21:23:02.555037  3312 net.cpp:150] Setting up relu4
I0323 21:23:02.555043  3312 net.cpp:157] Top shape: 1 384 15 15 (86400)
I0323 21:23:02.555048  3312 net.cpp:165] Memory required for data: 19894656
I0323 21:23:02.555052  3312 layer_factory.hpp:77] Creating layer conv5
I0323 21:23:02.555063  3312 net.cpp:106] Creating Layer conv5
I0323 21:23:02.555068  3312 net.cpp:454] conv5 <- conv4
I0323 21:23:02.555075  3312 net.cpp:411] conv5 -> conv5
I0323 21:23:02.557955  3312 net.cpp:150] Setting up conv5
I0323 21:23:02.557971  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.557976  3312 net.cpp:165] Memory required for data: 20125056
I0323 21:23:02.557996  3312 layer_factory.hpp:77] Creating layer relu5
I0323 21:23:02.558004  3312 net.cpp:106] Creating Layer relu5
I0323 21:23:02.558009  3312 net.cpp:454] relu5 <- conv5
I0323 21:23:02.558017  3312 net.cpp:397] relu5 -> conv5 (in-place)
I0323 21:23:02.558025  3312 net.cpp:150] Setting up relu5
I0323 21:23:02.558032  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.558034  3312 net.cpp:165] Memory required for data: 20355456
I0323 21:23:02.558038  3312 layer_factory.hpp:77] Creating layer conv5_relu5_0_split
I0323 21:23:02.558050  3312 net.cpp:106] Creating Layer conv5_relu5_0_split
I0323 21:23:02.558054  3312 net.cpp:454] conv5_relu5_0_split <- conv5
I0323 21:23:02.558063  3312 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_0
I0323 21:23:02.558071  3312 net.cpp:411] conv5_relu5_0_split -> conv5_relu5_0_split_1
I0323 21:23:02.558112  3312 net.cpp:150] Setting up conv5_relu5_0_split
I0323 21:23:02.558120  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.558125  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.558130  3312 net.cpp:165] Memory required for data: 20816256
I0323 21:23:02.558133  3312 layer_factory.hpp:77] Creating layer rpn_conv/3x3
I0323 21:23:02.558148  3312 net.cpp:106] Creating Layer rpn_conv/3x3
I0323 21:23:02.558153  3312 net.cpp:454] rpn_conv/3x3 <- conv5_relu5_0_split_0
I0323 21:23:02.558159  3312 net.cpp:411] rpn_conv/3x3 -> rpn/output
I0323 21:23:02.572001  3312 net.cpp:150] Setting up rpn_conv/3x3
I0323 21:23:02.572016  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.572019  3312 net.cpp:165] Memory required for data: 21046656
I0323 21:23:02.572026  3312 layer_factory.hpp:77] Creating layer rpn_relu/3x3
I0323 21:23:02.572036  3312 net.cpp:106] Creating Layer rpn_relu/3x3
I0323 21:23:02.572043  3312 net.cpp:454] rpn_relu/3x3 <- rpn/output
I0323 21:23:02.572049  3312 net.cpp:397] rpn_relu/3x3 -> rpn/output (in-place)
I0323 21:23:02.572057  3312 net.cpp:150] Setting up rpn_relu/3x3
I0323 21:23:02.572063  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.572067  3312 net.cpp:165] Memory required for data: 21277056
I0323 21:23:02.572070  3312 layer_factory.hpp:77] Creating layer rpn/output_rpn_relu/3x3_0_split
I0323 21:23:02.572077  3312 net.cpp:106] Creating Layer rpn/output_rpn_relu/3x3_0_split
I0323 21:23:02.572080  3312 net.cpp:454] rpn/output_rpn_relu/3x3_0_split <- rpn/output
I0323 21:23:02.572085  3312 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_0
I0323 21:23:02.572093  3312 net.cpp:411] rpn/output_rpn_relu/3x3_0_split -> rpn/output_rpn_relu/3x3_0_split_1
I0323 21:23:02.572129  3312 net.cpp:150] Setting up rpn/output_rpn_relu/3x3_0_split
I0323 21:23:02.572136  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.572141  3312 net.cpp:157] Top shape: 1 256 15 15 (57600)
I0323 21:23:02.572145  3312 net.cpp:165] Memory required for data: 21737856
I0323 21:23:02.572149  3312 layer_factory.hpp:77] Creating layer rpn_cls_score
I0323 21:23:02.572160  3312 net.cpp:106] Creating Layer rpn_cls_score
I0323 21:23:02.572163  3312 net.cpp:454] rpn_cls_score <- rpn/output_rpn_relu/3x3_0_split_0
I0323 21:23:02.572171  3312 net.cpp:411] rpn_cls_score -> rpn_cls_score
I0323 21:23:02.572486  3312 net.cpp:150] Setting up rpn_cls_score
I0323 21:23:02.572495  3312 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0323 21:23:02.572499  3312 net.cpp:165] Memory required for data: 21754056
I0323 21:23:02.572505  3312 layer_factory.hpp:77] Creating layer rpn_bbox_pred
I0323 21:23:02.572517  3312 net.cpp:106] Creating Layer rpn_bbox_pred
I0323 21:23:02.572521  3312 net.cpp:454] rpn_bbox_pred <- rpn/output_rpn_relu/3x3_0_split_1
I0323 21:23:02.572528  3312 net.cpp:411] rpn_bbox_pred -> rpn_bbox_pred
I0323 21:23:02.572932  3312 net.cpp:150] Setting up rpn_bbox_pred
I0323 21:23:02.572940  3312 net.cpp:157] Top shape: 1 36 15 15 (8100)
I0323 21:23:02.572944  3312 net.cpp:165] Memory required for data: 21786456
I0323 21:23:02.572955  3312 layer_factory.hpp:77] Creating layer rpn_cls_score_reshape
I0323 21:23:02.572969  3312 net.cpp:106] Creating Layer rpn_cls_score_reshape
I0323 21:23:02.572974  3312 net.cpp:454] rpn_cls_score_reshape <- rpn_cls_score
I0323 21:23:02.572980  3312 net.cpp:411] rpn_cls_score_reshape -> rpn_cls_score_reshape
I0323 21:23:02.573014  3312 net.cpp:150] Setting up rpn_cls_score_reshape
I0323 21:23:02.573020  3312 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0323 21:23:02.573024  3312 net.cpp:165] Memory required for data: 21802656
I0323 21:23:02.573027  3312 layer_factory.hpp:77] Creating layer rpn_cls_prob
I0323 21:23:02.573035  3312 net.cpp:106] Creating Layer rpn_cls_prob
I0323 21:23:02.573038  3312 net.cpp:454] rpn_cls_prob <- rpn_cls_score_reshape
I0323 21:23:02.573045  3312 net.cpp:411] rpn_cls_prob -> rpn_cls_prob
I0323 21:23:02.573107  3312 net.cpp:150] Setting up rpn_cls_prob
I0323 21:23:02.573113  3312 net.cpp:157] Top shape: 1 2 135 15 (4050)
I0323 21:23:02.573117  3312 net.cpp:165] Memory required for data: 21818856
I0323 21:23:02.573120  3312 layer_factory.hpp:77] Creating layer rpn_cls_prob_reshape
I0323 21:23:02.573127  3312 net.cpp:106] Creating Layer rpn_cls_prob_reshape
I0323 21:23:02.573132  3312 net.cpp:454] rpn_cls_prob_reshape <- rpn_cls_prob
I0323 21:23:02.573140  3312 net.cpp:411] rpn_cls_prob_reshape -> rpn_cls_prob_reshape
I0323 21:23:02.573161  3312 net.cpp:150] Setting up rpn_cls_prob_reshape
I0323 21:23:02.573168  3312 net.cpp:157] Top shape: 1 18 15 15 (4050)
I0323 21:23:02.573171  3312 net.cpp:165] Memory required for data: 21835056
I0323 21:23:02.573174  3312 layer_factory.hpp:77] Creating layer proposal
I0323 21:23:02.575613  3312 net.cpp:106] Creating Layer proposal
I0323 21:23:02.575625  3312 net.cpp:454] proposal <- rpn_cls_prob_reshape
I0323 21:23:02.575633  3312 net.cpp:454] proposal <- rpn_bbox_pred
I0323 21:23:02.575639  3312 net.cpp:454] proposal <- im_info
I0323 21:23:02.575644  3312 net.cpp:411] proposal -> rois
I0323 21:23:02.576447  3312 net.cpp:150] Setting up proposal
I0323 21:23:02.576462  3312 net.cpp:157] Top shape: 1 5 (5)
I0323 21:23:02.576465  3312 net.cpp:165] Memory required for data: 21835076
I0323 21:23:02.576469  3312 layer_factory.hpp:77] Creating layer roi_pool_conv5
I0323 21:23:02.576480  3312 net.cpp:106] Creating Layer roi_pool_conv5
I0323 21:23:02.576485  3312 net.cpp:454] roi_pool_conv5 <- conv5_relu5_0_split_1
I0323 21:23:02.576491  3312 net.cpp:454] roi_pool_conv5 <- rois
I0323 21:23:02.576498  3312 net.cpp:411] roi_pool_conv5 -> roi_pool_conv5
I0323 21:23:02.576508  3312 roi_pooling_layer.cpp:30] Spatial scale: 0.0625
I0323 21:23:02.576560  3312 net.cpp:150] Setting up roi_pool_conv5
I0323 21:23:02.576565  3312 net.cpp:157] Top shape: 1 256 6 6 (9216)
I0323 21:23:02.576570  3312 net.cpp:165] Memory required for data: 21871940
I0323 21:23:02.576573  3312 layer_factory.hpp:77] Creating layer fc6
I0323 21:23:02.576582  3312 net.cpp:106] Creating Layer fc6
I0323 21:23:02.576586  3312 net.cpp:454] fc6 <- roi_pool_conv5
I0323 21:23:02.576591  3312 net.cpp:411] fc6 -> fc6
I0323 21:23:02.676219  3312 net.cpp:150] Setting up fc6
I0323 21:23:02.676254  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.676259  3312 net.cpp:165] Memory required for data: 21888324
I0323 21:23:02.676282  3312 layer_factory.hpp:77] Creating layer relu6
I0323 21:23:02.676295  3312 net.cpp:106] Creating Layer relu6
I0323 21:23:02.676301  3312 net.cpp:454] relu6 <- fc6
I0323 21:23:02.676307  3312 net.cpp:397] relu6 -> fc6 (in-place)
I0323 21:23:02.676317  3312 net.cpp:150] Setting up relu6
I0323 21:23:02.676322  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.676326  3312 net.cpp:165] Memory required for data: 21904708
I0323 21:23:02.676329  3312 layer_factory.hpp:77] Creating layer drop6
I0323 21:23:02.676342  3312 net.cpp:106] Creating Layer drop6
I0323 21:23:02.676345  3312 net.cpp:454] drop6 <- fc6
I0323 21:23:02.676352  3312 net.cpp:397] drop6 -> fc6 (in-place)
I0323 21:23:02.676378  3312 net.cpp:150] Setting up drop6
I0323 21:23:02.676385  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.676388  3312 net.cpp:165] Memory required for data: 21921092
I0323 21:23:02.676393  3312 layer_factory.hpp:77] Creating layer fc7
I0323 21:23:02.676399  3312 net.cpp:106] Creating Layer fc7
I0323 21:23:02.676403  3312 net.cpp:454] fc7 <- fc6
I0323 21:23:02.676409  3312 net.cpp:411] fc7 -> fc7
I0323 21:23:02.719743  3312 net.cpp:150] Setting up fc7
I0323 21:23:02.719777  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.719780  3312 net.cpp:165] Memory required for data: 21937476
I0323 21:23:02.719792  3312 layer_factory.hpp:77] Creating layer relu7
I0323 21:23:02.719805  3312 net.cpp:106] Creating Layer relu7
I0323 21:23:02.719808  3312 net.cpp:454] relu7 <- fc7
I0323 21:23:02.719815  3312 net.cpp:397] relu7 -> fc7 (in-place)
I0323 21:23:02.719826  3312 net.cpp:150] Setting up relu7
I0323 21:23:02.719831  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.719835  3312 net.cpp:165] Memory required for data: 21953860
I0323 21:23:02.719838  3312 layer_factory.hpp:77] Creating layer drop7
I0323 21:23:02.719846  3312 net.cpp:106] Creating Layer drop7
I0323 21:23:02.719848  3312 net.cpp:454] drop7 <- fc7
I0323 21:23:02.719854  3312 net.cpp:397] drop7 -> fc7 (in-place)
I0323 21:23:02.719879  3312 net.cpp:150] Setting up drop7
I0323 21:23:02.719884  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.719888  3312 net.cpp:165] Memory required for data: 21970244
I0323 21:23:02.719892  3312 layer_factory.hpp:77] Creating layer fc7_drop7_0_split
I0323 21:23:02.719898  3312 net.cpp:106] Creating Layer fc7_drop7_0_split
I0323 21:23:02.719903  3312 net.cpp:454] fc7_drop7_0_split <- fc7
I0323 21:23:02.719909  3312 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_0
I0323 21:23:02.719915  3312 net.cpp:411] fc7_drop7_0_split -> fc7_drop7_0_split_1
I0323 21:23:02.719959  3312 net.cpp:150] Setting up fc7_drop7_0_split
I0323 21:23:02.719964  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.719969  3312 net.cpp:157] Top shape: 1 4096 (4096)
I0323 21:23:02.719972  3312 net.cpp:165] Memory required for data: 22003012
I0323 21:23:02.719974  3312 layer_factory.hpp:77] Creating layer cls_score
I0323 21:23:02.719987  3312 net.cpp:106] Creating Layer cls_score
I0323 21:23:02.719991  3312 net.cpp:454] cls_score <- fc7_drop7_0_split_0
I0323 21:23:02.720000  3312 net.cpp:411] cls_score -> cls_score
I0323 21:23:02.720098  3312 net.cpp:150] Setting up cls_score
I0323 21:23:02.720103  3312 net.cpp:157] Top shape: 1 2 (2)
I0323 21:23:02.720106  3312 net.cpp:165] Memory required for data: 22003020
I0323 21:23:02.720113  3312 layer_factory.hpp:77] Creating layer bbox_pred
I0323 21:23:02.720121  3312 net.cpp:106] Creating Layer bbox_pred
I0323 21:23:02.720125  3312 net.cpp:454] bbox_pred <- fc7_drop7_0_split_1
I0323 21:23:02.720136  3312 net.cpp:411] bbox_pred -> bbox_pred
I0323 21:23:02.720953  3312 net.cpp:150] Setting up bbox_pred
I0323 21:23:02.720965  3312 net.cpp:157] Top shape: 1 8 (8)
I0323 21:23:02.720968  3312 net.cpp:165] Memory required for data: 22003052
I0323 21:23:02.720976  3312 layer_factory.hpp:77] Creating layer cls_prob
I0323 21:23:02.720984  3312 net.cpp:106] Creating Layer cls_prob
I0323 21:23:02.720988  3312 net.cpp:454] cls_prob <- cls_score
I0323 21:23:02.720996  3312 net.cpp:411] cls_prob -> cls_prob
I0323 21:23:02.721051  3312 net.cpp:150] Setting up cls_prob
I0323 21:23:02.721057  3312 net.cpp:157] Top shape: 1 2 (2)
I0323 21:23:02.721060  3312 net.cpp:165] Memory required for data: 22003060
I0323 21:23:02.721065  3312 net.cpp:228] cls_prob does not need backward computation.
I0323 21:23:02.721068  3312 net.cpp:228] bbox_pred does not need backward computation.
I0323 21:23:02.721071  3312 net.cpp:228] cls_score does not need backward computation.
I0323 21:23:02.721074  3312 net.cpp:228] fc7_drop7_0_split does not need backward computation.
I0323 21:23:02.721078  3312 net.cpp:228] drop7 does not need backward computation.
I0323 21:23:02.721082  3312 net.cpp:228] relu7 does not need backward computation.
I0323 21:23:02.721086  3312 net.cpp:228] fc7 does not need backward computation.
I0323 21:23:02.721089  3312 net.cpp:228] drop6 does not need backward computation.
I0323 21:23:02.721092  3312 net.cpp:228] relu6 does not need backward computation.
I0323 21:23:02.721096  3312 net.cpp:228] fc6 does not need backward computation.
I0323 21:23:02.721099  3312 net.cpp:228] roi_pool_conv5 does not need backward computation.
I0323 21:23:02.721103  3312 net.cpp:228] proposal does not need backward computation.
I0323 21:23:02.721108  3312 net.cpp:228] rpn_cls_prob_reshape does not need backward computation.
I0323 21:23:02.721112  3312 net.cpp:228] rpn_cls_prob does not need backward computation.
I0323 21:23:02.721117  3312 net.cpp:228] rpn_cls_score_reshape does not need backward computation.
I0323 21:23:02.721120  3312 net.cpp:228] rpn_bbox_pred does not need backward computation.
I0323 21:23:02.721124  3312 net.cpp:228] rpn_cls_score does not need backward computation.
I0323 21:23:02.721128  3312 net.cpp:228] rpn/output_rpn_relu/3x3_0_split does not need backward computation.
I0323 21:23:02.721133  3312 net.cpp:228] rpn_relu/3x3 does not need backward computation.
I0323 21:23:02.721137  3312 net.cpp:228] rpn_conv/3x3 does not need backward computation.
I0323 21:23:02.721143  3312 net.cpp:228] conv5_relu5_0_split does not need backward computation.
I0323 21:23:02.721146  3312 net.cpp:228] relu5 does not need backward computation.
I0323 21:23:02.721149  3312 net.cpp:228] conv5 does not need backward computation.
I0323 21:23:02.721153  3312 net.cpp:228] relu4 does not need backward computation.
I0323 21:23:02.721158  3312 net.cpp:228] conv4 does not need backward computation.
I0323 21:23:02.721161  3312 net.cpp:228] relu3 does not need backward computation.
I0323 21:23:02.721164  3312 net.cpp:228] conv3 does not need backward computation.
I0323 21:23:02.721168  3312 net.cpp:228] pool2 does not need backward computation.
I0323 21:23:02.721173  3312 net.cpp:228] norm2 does not need backward computation.
I0323 21:23:02.721176  3312 net.cpp:228] relu2 does not need backward computation.
I0323 21:23:02.721180  3312 net.cpp:228] conv2 does not need backward computation.
I0323 21:23:02.721184  3312 net.cpp:228] pool1 does not need backward computation.
I0323 21:23:02.721187  3312 net.cpp:228] norm1 does not need backward computation.
I0323 21:23:02.721191  3312 net.cpp:228] relu1 does not need backward computation.
I0323 21:23:02.721194  3312 net.cpp:228] conv1 does not need backward computation.
I0323 21:23:02.721197  3312 net.cpp:270] This network produces output bbox_pred
I0323 21:23:02.721202  3312 net.cpp:270] This network produces output cls_prob
I0323 21:23:02.721226  3312 net.cpp:283] Network initialization done.
I0323 21:23:04.969138  3312 net.cpp:816] Ignoring source layer input-data
I0323 21:23:04.969174  3312 net.cpp:816] Ignoring source layer data_input-data_0_split
I0323 21:23:04.969179  3312 net.cpp:816] Ignoring source layer im_info_input-data_1_split
I0323 21:23:04.969182  3312 net.cpp:816] Ignoring source layer gt_boxes_input-data_2_split
I0323 21:23:04.974474  3312 net.cpp:816] Ignoring source layer rpn_cls_score_rpn_cls_score_0_split
I0323 21:23:04.974520  3312 net.cpp:816] Ignoring source layer rpn_bbox_pred_rpn_bbox_pred_0_split
I0323 21:23:04.974526  3312 net.cpp:816] Ignoring source layer rpn_cls_score_reshape_rpn_cls_score_reshape_0_split
I0323 21:23:04.974530  3312 net.cpp:816] Ignoring source layer rpn-data
I0323 21:23:04.974535  3312 net.cpp:816] Ignoring source layer rpn_loss_cls
I0323 21:23:04.974540  3312 net.cpp:816] Ignoring source layer rpn_loss_bbox
I0323 21:23:04.974546  3312 net.cpp:816] Ignoring source layer roi-data
I0323 21:23:05.034308  3312 net.cpp:816] Ignoring source layer loss_cls
I0323 21:23:05.034337  3312 net.cpp:816] Ignoring source layer loss_bbox
NET
<caffe._caffe.Net object at 0x2aaada1aae68>
im_detect: 1/500 0.185s 0.002s
im_detect: 2/500 0.157s 0.002s
im_detect: 3/500 0.151s 0.002s
im_detect: 4/500 0.145s 0.002s
im_detect: 5/500 0.140s 0.002s
im_detect: 6/500 0.138s 0.002s
im_detect: 7/500 0.136s 0.002s
im_detect: 8/500 0.133s 0.002s
im_detect: 9/500 0.133s 0.002s
im_detect: 10/500 0.133s 0.002s
im_detect: 11/500 0.131s 0.002s
im_detect: 12/500 0.130s 0.002s
im_detect: 13/500 0.128s 0.002s
im_detect: 14/500 0.128s 0.002s
im_detect: 15/500 0.129s 0.002s
im_detect: 16/500 0.128s 0.002s
im_detect: 17/500 0.127s 0.002s
im_detect: 18/500 0.126s 0.002s
im_detect: 19/500 0.126s 0.002s
im_detect: 20/500 0.125s 0.002s
im_detect: 21/500 0.124s 0.001s
im_detect: 22/500 0.124s 0.001s
im_detect: 23/500 0.123s 0.001s
im_detect: 24/500 0.122s 0.001s
im_detect: 25/500 0.121s 0.001s
im_detect: 26/500 0.120s 0.001s
im_detect: 27/500 0.119s 0.001s
im_detect: 28/500 0.119s 0.001s
im_detect: 29/500 0.118s 0.001s
im_detect: 30/500 0.117s 0.001s
im_detect: 31/500 0.117s 0.001s
im_detect: 32/500 0.116s 0.001s
im_detect: 33/500 0.116s 0.001s
im_detect: 34/500 0.115s 0.001s
im_detect: 35/500 0.115s 0.001s
im_detect: 36/500 0.115s 0.001s
im_detect: 37/500 0.115s 0.001s
im_detect: 38/500 0.114s 0.001s
im_detect: 39/500 0.114s 0.001s
im_detect: 40/500 0.114s 0.001s
im_detect: 41/500 0.113s 0.001s
im_detect: 42/500 0.113s 0.001s
im_detect: 43/500 0.113s 0.001s
im_detect: 44/500 0.113s 0.001s
im_detect: 45/500 0.113s 0.001s
im_detect: 46/500 0.112s 0.001s
im_detect: 47/500 0.112s 0.001s
im_detect: 48/500 0.112s 0.001s
im_detect: 49/500 0.112s 0.001s
im_detect: 50/500 0.111s 0.001s
im_detect: 51/500 0.111s 0.001s
im_detect: 52/500 0.111s 0.001s
im_detect: 53/500 0.111s 0.001s
im_detect: 54/500 0.111s 0.001s
im_detect: 55/500 0.110s 0.001s
im_detect: 56/500 0.110s 0.001s
im_detect: 57/500 0.110s 0.001s
im_detect: 58/500 0.110s 0.001s
im_detect: 59/500 0.110s 0.001s
im_detect: 60/500 0.109s 0.001s
im_detect: 61/500 0.109s 0.001s
im_detect: 62/500 0.109s 0.001s
im_detect: 63/500 0.109s 0.001s
im_detect: 64/500 0.109s 0.001s
im_detect: 65/500 0.109s 0.001s
im_detect: 66/500 0.109s 0.001s
im_detect: 67/500 0.109s 0.001s
im_detect: 68/500 0.109s 0.001s
im_detect: 69/500 0.109s 0.001s
im_detect: 70/500 0.109s 0.001s
im_detect: 71/500 0.109s 0.001s
im_detect: 72/500 0.109s 0.001s
im_detect: 73/500 0.109s 0.001s
im_detect: 74/500 0.109s 0.001s
im_detect: 75/500 0.109s 0.001s
im_detect: 76/500 0.109s 0.001s
im_detect: 77/500 0.109s 0.001s
im_detect: 78/500 0.109s 0.001s
im_detect: 79/500 0.109s 0.001s
im_detect: 80/500 0.109s 0.001s
im_detect: 81/500 0.109s 0.001s
im_detect: 82/500 0.109s 0.001s
im_detect: 83/500 0.109s 0.001s
im_detect: 84/500 0.109s 0.001s
im_detect: 85/500 0.109s 0.001s
im_detect: 86/500 0.108s 0.001s
im_detect: 87/500 0.108s 0.001s
im_detect: 88/500 0.108s 0.001s
im_detect: 89/500 0.108s 0.001s
im_detect: 90/500 0.108s 0.001s
im_detect: 91/500 0.108s 0.001s
im_detect: 92/500 0.108s 0.001s
im_detect: 93/500 0.108s 0.001s
im_detect: 94/500 0.108s 0.001s
im_detect: 95/500 0.108s 0.001s
im_detect: 96/500 0.108s 0.001s
im_detect: 97/500 0.108s 0.001s
im_detect: 98/500 0.108s 0.001s
im_detect: 99/500 0.108s 0.001s
im_detect: 100/500 0.108s 0.001s
im_detect: 101/500 0.108s 0.001s
im_detect: 102/500 0.108s 0.001s
im_detect: 103/500 0.108s 0.001s
im_detect: 104/500 0.108s 0.001s
im_detect: 105/500 0.108s 0.001s
im_detect: 106/500 0.108s 0.001s
im_detect: 107/500 0.107s 0.001s
im_detect: 108/500 0.107s 0.001s
im_detect: 109/500 0.107s 0.001s
im_detect: 110/500 0.107s 0.001s
im_detect: 111/500 0.107s 0.001s
im_detect: 112/500 0.107s 0.001s
im_detect: 113/500 0.107s 0.001s
im_detect: 114/500 0.107s 0.001s
im_detect: 115/500 0.107s 0.001s
im_detect: 116/500 0.107s 0.001s
im_detect: 117/500 0.107s 0.001s
im_detect: 118/500 0.107s 0.001s
im_detect: 119/500 0.107s 0.001s
im_detect: 120/500 0.107s 0.001s
im_detect: 121/500 0.107s 0.001s
im_detect: 122/500 0.107s 0.001s
im_detect: 123/500 0.107s 0.001s
im_detect: 124/500 0.107s 0.001s
im_detect: 125/500 0.107s 0.001s
im_detect: 126/500 0.107s 0.001s
im_detect: 127/500 0.107s 0.001s
im_detect: 128/500 0.107s 0.001s
im_detect: 129/500 0.107s 0.001s
im_detect: 130/500 0.107s 0.001s
im_detect: 131/500 0.107s 0.001s
im_detect: 132/500 0.107s 0.001s
im_detect: 133/500 0.107s 0.001s
im_detect: 134/500 0.106s 0.001s
im_detect: 135/500 0.106s 0.001s
im_detect: 136/500 0.106s 0.001s
im_detect: 137/500 0.106s 0.001s
im_detect: 138/500 0.106s 0.001s
im_detect: 139/500 0.106s 0.001s
im_detect: 140/500 0.106s 0.001s
im_detect: 141/500 0.106s 0.001s
im_detect: 142/500 0.106s 0.001s
im_detect: 143/500 0.106s 0.001s
im_detect: 144/500 0.106s 0.001s
im_detect: 145/500 0.106s 0.001s
im_detect: 146/500 0.106s 0.001s
im_detect: 147/500 0.106s 0.001s
im_detect: 148/500 0.106s 0.001s
im_detect: 149/500 0.106s 0.001s
im_detect: 150/500 0.106s 0.001s
im_detect: 151/500 0.106s 0.001s
im_detect: 152/500 0.106s 0.001s
im_detect: 153/500 0.106s 0.001s
im_detect: 154/500 0.106s 0.001s
im_detect: 155/500 0.106s 0.001s
im_detect: 156/500 0.106s 0.001s
im_detect: 157/500 0.106s 0.001s
im_detect: 158/500 0.106s 0.001s
im_detect: 159/500 0.106s 0.001s
im_detect: 160/500 0.106s 0.001s
im_detect: 161/500 0.106s 0.001s
im_detect: 162/500 0.105s 0.001s
im_detect: 163/500 0.105s 0.001s
im_detect: 164/500 0.105s 0.001s
im_detect: 165/500 0.105s 0.001s
im_detect: 166/500 0.106s 0.001s
im_detect: 167/500 0.106s 0.001s
im_detect: 168/500 0.106s 0.001s
im_detect: 169/500 0.106s 0.001s
im_detect: 170/500 0.106s 0.001s
im_detect: 171/500 0.106s 0.001s
im_detect: 172/500 0.106s 0.001s
im_detect: 173/500 0.106s 0.001s
im_detect: 174/500 0.106s 0.001s
im_detect: 175/500 0.106s 0.001s
im_detect: 176/500 0.106s 0.001s
im_detect: 177/500 0.106s 0.001s
im_detect: 178/500 0.105s 0.001s
im_detect: 179/500 0.105s 0.001s
im_detect: 180/500 0.105s 0.001s
im_detect: 181/500 0.105s 0.001s
im_detect: 182/500 0.106s 0.001s
im_detect: 183/500 0.105s 0.001s
im_detect: 184/500 0.105s 0.001s
im_detect: 185/500 0.105s 0.001s
im_detect: 186/500 0.105s 0.001s
im_detect: 187/500 0.105s 0.001s
im_detect: 188/500 0.105s 0.001s
im_detect: 189/500 0.105s 0.001s
im_detect: 190/500 0.106s 0.001s
im_detect: 191/500 0.106s 0.001s
im_detect: 192/500 0.105s 0.001s
im_detect: 193/500 0.105s 0.001s
im_detect: 194/500 0.105s 0.001s
im_detect: 195/500 0.105s 0.001s
im_detect: 196/500 0.105s 0.001s
im_detect: 197/500 0.105s 0.001s
im_detect: 198/500 0.105s 0.001s
im_detect: 199/500 0.105s 0.001s
im_detect: 200/500 0.105s 0.001s
im_detect: 201/500 0.105s 0.001s
im_detect: 202/500 0.105s 0.001s
im_detect: 203/500 0.105s 0.001s
im_detect: 204/500 0.105s 0.001s
im_detect: 205/500 0.105s 0.001s
im_detect: 206/500 0.105s 0.001s
im_detect: 207/500 0.105s 0.001s
im_detect: 208/500 0.105s 0.001s
im_detect: 209/500 0.105s 0.001s
im_detect: 210/500 0.105s 0.001s
im_detect: 211/500 0.105s 0.001s
im_detect: 212/500 0.105s 0.001s
im_detect: 213/500 0.105s 0.001s
im_detect: 214/500 0.105s 0.001s
im_detect: 215/500 0.105s 0.001s
im_detect: 216/500 0.105s 0.001s
im_detect: 217/500 0.105s 0.001s
im_detect: 218/500 0.105s 0.001s
im_detect: 219/500 0.105s 0.001s
im_detect: 220/500 0.105s 0.001s
im_detect: 221/500 0.105s 0.001s
im_detect: 222/500 0.105s 0.001s
im_detect: 223/500 0.105s 0.001s
im_detect: 224/500 0.105s 0.001s
im_detect: 225/500 0.105s 0.001s
im_detect: 226/500 0.105s 0.001s
im_detect: 227/500 0.105s 0.001s
im_detect: 228/500 0.105s 0.001s
im_detect: 229/500 0.105s 0.001s
im_detect: 230/500 0.105s 0.001s
im_detect: 231/500 0.105s 0.001s
im_detect: 232/500 0.105s 0.001s
im_detect: 233/500 0.105s 0.001s
im_detect: 234/500 0.105s 0.001s
im_detect: 235/500 0.105s 0.001s
im_detect: 236/500 0.105s 0.001s
im_detect: 237/500 0.105s 0.001s
im_detect: 238/500 0.105s 0.001s
im_detect: 239/500 0.105s 0.001s
im_detect: 240/500 0.105s 0.001s
im_detect: 241/500 0.105s 0.001s
im_detect: 242/500 0.105s 0.001s
im_detect: 243/500 0.105s 0.001s
im_detect: 244/500 0.105s 0.001s
im_detect: 245/500 0.105s 0.001s
im_detect: 246/500 0.105s 0.001s
im_detect: 247/500 0.105s 0.001s
im_detect: 248/500 0.105s 0.001s
im_detect: 249/500 0.105s 0.001s
im_detect: 250/500 0.105s 0.001s
im_detect: 251/500 0.105s 0.001s
im_detect: 252/500 0.105s 0.001s
im_detect: 253/500 0.105s 0.001s
im_detect: 254/500 0.105s 0.001s
im_detect: 255/500 0.105s 0.001s
im_detect: 256/500 0.105s 0.001s
im_detect: 257/500 0.105s 0.001s
im_detect: 258/500 0.105s 0.001s
im_detect: 259/500 0.105s 0.001s
im_detect: 260/500 0.105s 0.001s
im_detect: 261/500 0.105s 0.001s
im_detect: 262/500 0.105s 0.001s
im_detect: 263/500 0.105s 0.001s
im_detect: 264/500 0.105s 0.001s
im_detect: 265/500 0.105s 0.001s
im_detect: 266/500 0.105s 0.001s
im_detect: 267/500 0.105s 0.001s
im_detect: 268/500 0.105s 0.001s
im_detect: 269/500 0.105s 0.001s
im_detect: 270/500 0.105s 0.001s
im_detect: 271/500 0.105s 0.001s
im_detect: 272/500 0.105s 0.001s
im_detect: 273/500 0.105s 0.001s
im_detect: 274/500 0.105s 0.001s
im_detect: 275/500 0.105s 0.001s
im_detect: 276/500 0.105s 0.001s
im_detect: 277/500 0.105s 0.001s
im_detect: 278/500 0.105s 0.001s
im_detect: 279/500 0.105s 0.001s
im_detect: 280/500 0.105s 0.001s
im_detect: 281/500 0.105s 0.001s
im_detect: 282/500 0.105s 0.001s
im_detect: 283/500 0.105s 0.001s
im_detect: 284/500 0.105s 0.001s
im_detect: 285/500 0.105s 0.001s
im_detect: 286/500 0.105s 0.001s
im_detect: 287/500 0.105s 0.001s
im_detect: 288/500 0.105s 0.001s
im_detect: 289/500 0.105s 0.001s
im_detect: 290/500 0.105s 0.001s
im_detect: 291/500 0.105s 0.001s
im_detect: 292/500 0.105s 0.001s
im_detect: 293/500 0.105s 0.001s
im_detect: 294/500 0.105s 0.001s
im_detect: 295/500 0.105s 0.001s
im_detect: 296/500 0.105s 0.001s
im_detect: 297/500 0.105s 0.001s
im_detect: 298/500 0.105s 0.001s
im_detect: 299/500 0.105s 0.001s
im_detect: 300/500 0.105s 0.001s
im_detect: 301/500 0.105s 0.001s
im_detect: 302/500 0.105s 0.001s
im_detect: 303/500 0.105s 0.001s
im_detect: 304/500 0.105s 0.001s
im_detect: 305/500 0.105s 0.001s
im_detect: 306/500 0.105s 0.001s
im_detect: 307/500 0.105s 0.001s
im_detect: 308/500 0.105s 0.001s
im_detect: 309/500 0.105s 0.001s
im_detect: 310/500 0.105s 0.001s
im_detect: 311/500 0.105s 0.001s
im_detect: 312/500 0.105s 0.001s
im_detect: 313/500 0.105s 0.001s
im_detect: 314/500 0.105s 0.001s
im_detect: 315/500 0.105s 0.001s
im_detect: 316/500 0.105s 0.001s
im_detect: 317/500 0.105s 0.001s
im_detect: 318/500 0.105s 0.001s
im_detect: 319/500 0.105s 0.001s
im_detect: 320/500 0.105s 0.001s
im_detect: 321/500 0.105s 0.001s
im_detect: 322/500 0.105s 0.001s
im_detect: 323/500 0.105s 0.001s
im_detect: 324/500 0.105s 0.001s
im_detect: 325/500 0.104s 0.001s
im_detect: 326/500 0.104s 0.001s
im_detect: 327/500 0.104s 0.001s
im_detect: 328/500 0.104s 0.001s
im_detect: 329/500 0.104s 0.001s
im_detect: 330/500 0.104s 0.001s
im_detect: 331/500 0.104s 0.001s
im_detect: 332/500 0.104s 0.001s
im_detect: 333/500 0.104s 0.001s
im_detect: 334/500 0.104s 0.001s
im_detect: 335/500 0.104s 0.001s
im_detect: 336/500 0.104s 0.001s
im_detect: 337/500 0.104s 0.001s
im_detect: 338/500 0.104s 0.001s
im_detect: 339/500 0.104s 0.001s
im_detect: 340/500 0.104s 0.001s
im_detect: 341/500 0.104s 0.001s
im_detect: 342/500 0.104s 0.001s
im_detect: 343/500 0.104s 0.001s
im_detect: 344/500 0.104s 0.001s
im_detect: 345/500 0.104s 0.001s
im_detect: 346/500 0.104s 0.001s
im_detect: 347/500 0.104s 0.001s
im_detect: 348/500 0.104s 0.001s
im_detect: 349/500 0.104s 0.001s
im_detect: 350/500 0.104s 0.001s
im_detect: 351/500 0.104s 0.001s
im_detect: 352/500 0.104s 0.001s
im_detect: 353/500 0.104s 0.001s
im_detect: 354/500 0.104s 0.001s
im_detect: 355/500 0.104s 0.001s
im_detect: 356/500 0.104s 0.001s
im_detect: 357/500 0.104s 0.001s
im_detect: 358/500 0.104s 0.001s
im_detect: 359/500 0.104s 0.001s
im_detect: 360/500 0.104s 0.001s
im_detect: 361/500 0.104s 0.001s
im_detect: 362/500 0.104s 0.001s
im_detect: 363/500 0.104s 0.001s
im_detect: 364/500 0.104s 0.001s
im_detect: 365/500 0.104s 0.001s
im_detect: 366/500 0.104s 0.001s
im_detect: 367/500 0.104s 0.001s
im_detect: 368/500 0.104s 0.001s
im_detect: 369/500 0.104s 0.001s
im_detect: 370/500 0.104s 0.001s
im_detect: 371/500 0.104s 0.001s
im_detect: 372/500 0.104s 0.001s
im_detect: 373/500 0.104s 0.001s
im_detect: 374/500 0.104s 0.001s
im_detect: 375/500 0.104s 0.001s
im_detect: 376/500 0.104s 0.001s
im_detect: 377/500 0.104s 0.001s
im_detect: 378/500 0.104s 0.001s
im_detect: 379/500 0.104s 0.001s
im_detect: 380/500 0.104s 0.001s
im_detect: 381/500 0.104s 0.001s
im_detect: 382/500 0.104s 0.001s
im_detect: 383/500 0.104s 0.001s
im_detect: 384/500 0.104s 0.001s
im_detect: 385/500 0.104s 0.001s
im_detect: 386/500 0.104s 0.001s
im_detect: 387/500 0.104s 0.001s
im_detect: 388/500 0.104s 0.001s
im_detect: 389/500 0.104s 0.001s
im_detect: 390/500 0.104s 0.001s
im_detect: 391/500 0.104s 0.001s
im_detect: 392/500 0.104s 0.001s
im_detect: 393/500 0.104s 0.001s
im_detect: 394/500 0.104s 0.001s
im_detect: 395/500 0.104s 0.001s
im_detect: 396/500 0.104s 0.001s
im_detect: 397/500 0.104s 0.001s
im_detect: 398/500 0.104s 0.001s
im_detect: 399/500 0.104s 0.001s
im_detect: 400/500 0.104s 0.001s
im_detect: 401/500 0.104s 0.001s
im_detect: 402/500 0.104s 0.001s
im_detect: 403/500 0.104s 0.001s
im_detect: 404/500 0.104s 0.001s
im_detect: 405/500 0.104s 0.001s
im_detect: 406/500 0.104s 0.001s
im_detect: 407/500 0.104s 0.001s
im_detect: 408/500 0.104s 0.001s
im_detect: 409/500 0.104s 0.001s
im_detect: 410/500 0.104s 0.001s
im_detect: 411/500 0.104s 0.001s
im_detect: 412/500 0.104s 0.001s
im_detect: 413/500 0.104s 0.001s
im_detect: 414/500 0.104s 0.001s
im_detect: 415/500 0.104s 0.001s
im_detect: 416/500 0.104s 0.001s
im_detect: 417/500 0.103s 0.001s
im_detect: 418/500 0.103s 0.001s
im_detect: 419/500 0.103s 0.001s
im_detect: 420/500 0.103s 0.001s
im_detect: 421/500 0.103s 0.001s
im_detect: 422/500 0.103s 0.001s
im_detect: 423/500 0.103s 0.001s
im_detect: 424/500 0.103s 0.001s
im_detect: 425/500 0.103s 0.001s
im_detect: 426/500 0.103s 0.001s
im_detect: 427/500 0.103s 0.001s
im_detect: 428/500 0.103s 0.001s
im_detect: 429/500 0.103s 0.001s
im_detect: 430/500 0.103s 0.001s
im_detect: 431/500 0.103s 0.001s
im_detect: 432/500 0.103s 0.001s
im_detect: 433/500 0.103s 0.001s
im_detect: 434/500 0.103s 0.001s
im_detect: 435/500 0.103s 0.001s
im_detect: 436/500 0.103s 0.001s
im_detect: 437/500 0.103s 0.001s
im_detect: 438/500 0.103s 0.001s
im_detect: 439/500 0.103s 0.001s
im_detect: 440/500 0.103s 0.001s
im_detect: 441/500 0.103s 0.001s
im_detect: 442/500 0.103s 0.001s
im_detect: 443/500 0.103s 0.001s
im_detect: 444/500 0.103s 0.001s
im_detect: 445/500 0.103s 0.001s
im_detect: 446/500 0.103s 0.001s
im_detect: 447/500 0.103s 0.001s
im_detect: 448/500 0.103s 0.001s
im_detect: 449/500 0.103s 0.001s
im_detect: 450/500 0.104s 0.001s
im_detect: 451/500 0.104s 0.001s
im_detect: 452/500 0.104s 0.001s
im_detect: 453/500 0.104s 0.001s
im_detect: 454/500 0.104s 0.001s
im_detect: 455/500 0.104s 0.001s
im_detect: 456/500 0.104s 0.001s
im_detect: 457/500 0.104s 0.001s
im_detect: 458/500 0.104s 0.001s
im_detect: 459/500 0.104s 0.001s
im_detect: 460/500 0.104s 0.001s
im_detect: 461/500 0.104s 0.001s
im_detect: 462/500 0.104s 0.001s
im_detect: 463/500 0.104s 0.001s
im_detect: 464/500 0.104s 0.001s
im_detect: 465/500 0.104s 0.001s
im_detect: 466/500 0.104s 0.001s
im_detect: 467/500 0.104s 0.001s
im_detect: 468/500 0.104s 0.001s
im_detect: 469/500 0.104s 0.001s
im_detect: 470/500 0.104s 0.001s
im_detect: 471/500 0.104s 0.001s
im_detect: 472/500 0.104s 0.001s
im_detect: 473/500 0.104s 0.001s
im_detect: 474/500 0.104s 0.001s
im_detect: 475/500 0.104s 0.001s
im_detect: 476/500 0.104s 0.001s
im_detect: 477/500 0.104s 0.001s
im_detect: 478/500 0.104s 0.001s
im_detect: 479/500 0.104s 0.001s
im_detect: 480/500 0.104s 0.001s
im_detect: 481/500 0.104s 0.001s
im_detect: 482/500 0.104s 0.001s
im_detect: 483/500 0.104s 0.001s
im_detect: 484/500 0.104s 0.001s
im_detect: 485/500 0.104s 0.001s
im_detect: 486/500 0.104s 0.001s
im_detect: 487/500 0.104s 0.001s
im_detect: 488/500 0.104s 0.001s
im_detect: 489/500 0.104s 0.001s
im_detect: 490/500 0.104s 0.001s
im_detect: 491/500 0.104s 0.001s
im_detect: 492/500 0.104s 0.001s
im_detect: 493/500 0.104s 0.001s
im_detect: 494/500 0.104s 0.001s
im_detect: 495/500 0.104s 0.001s
im_detect: 496/500 0.104s 0.001s
im_detect: 497/500 0.104s 0.001s
im_detect: 498/500 0.104s 0.001s
im_detect: 499/500 0.104s 0.001s
im_detect: 500/500 0.104s 0.001s
Evaluating detections
Writing roost VOC results file
VOC07 metric? Yes
/home/sgabriel/py-faster-rcnn/data/VOCdevkit2007/annotations_cache
Reading annotation for 1/500
Reading annotation for 101/500
Reading annotation for 201/500
Reading annotation for 301/500
Reading annotation for 401/500
Saving cached annotations to /home/sgabriel/py-faster-rcnn/data/VOCdevkit2007/annotations_cache/annots.pkl
AP for roost = 0.0001
Mean AP = 0.0001
~~~~~~~~
Results:
0.000
0.000
~~~~~~~~

--------------------------------------------------------------
Results computed with the **unofficial** Python eval code.
Results should be very close to the official MATLAB eval code.
Recompute with `./tools/reval.py --matlab ...` for your paper.
-- Thanks, The Management
--------------------------------------------------------------

real	1m8.178s
user	2m10.149s
sys	0m3.656s
